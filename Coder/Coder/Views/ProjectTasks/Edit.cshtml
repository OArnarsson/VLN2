@model Coder.Models.Entity.ProjectTask

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "taskEditForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProjectTask</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control codertiny" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>
        @{
            string files = "";

            if (Model.FilesRequired != null)
            {
                foreach (var file in Model.FilesRequired)
                {
                    files += file.Name + ", ";
                }
            }
        }
        <div class="form-group">
            <label class="control-label col-md-2" for="files">Files:</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="files" placeholder="Filenames seperated by ," type="text" name="files" value="@files" />
            </div>
        </div>
        

        <div id="tests">
            @{ int counter = 1; }
            @foreach (var test in Model.TaskTests)
            {
                <div class="test clearfix">
                    <h3>Test @counter</h3>
                    <a href="#" class="remove-test"><i class="fa fa-trash" aria-hidden="true"></i></a>
                    <div class="tests-wrap row">
                        <div class="input-wrap col-sm-6">
                            <p>Input</p>
                            <div class="editor input">@test.Input</div>
                        </div>
                        <div class="output-wrap col-sm-6">
                            <p>Output</p>
                            <div class="editor output">@test.Output</div>
                        </div>
                    </div>
                </div>
                counter = counter + 1;
            }
        </div>

        <a id="newTest" href="#"><i class="fa fa-plus"></i>Add test</a>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<a href=@Url.Action("Details", "ProjectTasks", new { id = Model.Id })><i class="fa fa-arrow-left"></i></a>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/ace/ace.js")

}
