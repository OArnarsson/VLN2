@model IEnumerable<Coder.Models.Entity.ProjectTask>
@using Microsoft.AspNet.Identity;

@{
    ViewBag.Title = "Tasks";
}

@section heading {
    <h1>Tasks</h1>
}

@section breadcrumbs {
    <ul>
        <li>@Html.ActionLink("Coder", "Index", "Home")</li>
        <li>@Html.ActionLink("Tasks", "Index", "ProjectTasks")</li>
    </ul>
}

<div class="whiteBox">
    @if (User.IsInRole("Administrator") || ViewBag.IsTeacher == true)
    {
        <a class="btn btn-default" href=@Url.Action("Create", "ProjectTasks")><i class="fa fa-edit"></i>Create a new task</a>
    }

    <table class="stripe coder-table coder-datatable">
        <thead>
            <tr>
                <th>
                    Task
                </th>
                <th>
                    Project
                </th>
                <th>
                    Course
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Value)
                </th>
                <th>
                    Grade
                </th>
                <th>@*Edit/Details/Delete*@</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Name, "Details", new { id = item.Id })
                    </td>
                    <td>
                        @Html.ActionLink(item.Project.Name, "Details", "Projects", new { id = item.Project.Id }, null)
                    </td>
                    <td>
                        @Html.ActionLink(item.Project.Course.Name, "Details", "Courses", new { id = item.Project.CourseId }, null)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Value)
                    </td>
                    <td>
                        @if (item.GradeProjectTasks.SingleOrDefault(i => i.UserId == User.Identity.GetUserId()) != null)
                        {
                            <span>@item.GradeProjectTasks.SingleOrDefault(i => i.UserId == User.Identity.GetUserId()).Grade</span>
                        }
                        else
                        {
                            <span>-</span>
                        }
                    </td>
                    <td>
                        @{
                            bool isTeacher = false;
                            if (!User.IsInRole("Administrator"))
                            {
                                
                                isTeacher = item.Project.Course.UserCourses.FirstOrDefault(x => x.UserId == User.Identity.GetUserId()).CoderRole == Coder.Models.Entity.CoderRole.Teacher;
                            }
                       }

                        @if (User.IsInRole("Administrator") || isTeacher)
                        {
                            <a href=@Url.Action("Edit", "ProjectTasks", new { id = item.Id })><i class="fa fa-pencil"></i></a>
                            <a href=@Url.Action("Delete", "ProjectTasks", new { id = item.Id })><i class="fa fa-trash"></i></a>
                        }
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>