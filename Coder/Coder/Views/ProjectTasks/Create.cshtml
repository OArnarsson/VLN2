@model Coder.Models.Entity.ProjectTask

@{
    ViewBag.Title = "Create";
}

@section heading {
    <h1>Create - Task</h1>
}

@section breadcrumbs {
    <ul>
        <li>@Html.ActionLink("Coder", "Index", "Home")</li>
        <li>@Html.ActionLink("Tasks", "Index", "ProjectTasks")</li>
        <li>@Html.ActionLink("Create", "Create", "ProjectTasks")</li>
    </ul>
}

<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="whiteBox box">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control codertiny" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @step = "1", @type = "number", @min = "0", @max = "100", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*@{
                    string files = "";

                    if (Model.FilesRequired != null)
                    {
                        foreach (var file in Model.FilesRequired)
                        {
                            files += file.Name + ", ";
                        }
                    }
                }
                <div class="form-group">
                    <label class="control-label col-md-2" for="files">Files:</label>
                    <div class="col-md-10">
                        <input class="form-control text-box single-line" id="files" placeholder="Filenames seperated by ," type="text" name="files" value="@files" />
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.MaxGroupSize, "Max group size", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxGroupSize, new { htmlAttributes = new { @step = "1", @type = "number", @min = "0", @max = "100", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxGroupSize, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
          
            <a id="newTest" href="#"><i class="fa fa-plus"></i>Add test</a>

            <div class="form-group text-center">
                <div class="col-md-12">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>

<a id="cancelCreate" href=@Url.Action("Index", "ProjectTasks") <i class="fa fa-arrow-left"></i></a>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

    }
