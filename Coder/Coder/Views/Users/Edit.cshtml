@model Coder.Models.ViewModels.UserViewModel

@{
    ViewBag.Title = "Edit";

    var enumList = new List<SelectListItem>();
    foreach (var value in Enum.GetValues(typeof(Coder.Models.Entity.CoderRole)))
    {
        enumList.Add(new SelectListItem
        {
            Text = value.ToString(),
            Value = ((int)value).ToString()
        });
    }
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CurrentUser.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentUser.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentUser.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentUser.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentUser.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentUser.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentUser.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentUser.UserCourses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    <thead>
                        <tr>
                            <td>Course</td>
                            <td>Role</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var course in Model.Courses)
                        {
                            enumList.ForEach(x => x.Selected = Model.CurrentUser.UserCourses.Any(j => j.CourseId == course.Id) &&
                                                               (int.Parse(x.Value) == ((int)Model.CurrentUser.UserCourses.FirstOrDefault(j => j.CourseId == course.Id).CoderRole)));
                            <tr>
                                <td>@course.Title</td>
                                <td>@Html.DropDownList(("Course_" + course.Id), enumList, "---")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
