@model Coder.Models.ViewModels.UserViewModel

@{
    ViewBag.Title = "Edit";

    var enumList = new List<SelectListItem>();
    foreach (var value in Enum.GetValues(typeof(Coder.Models.Entity.CoderRole)))
    {
        enumList.Add(new SelectListItem
        {
            Text = value.ToString(),
            Value = ((int)value).ToString()
        });
    }
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Administrator"))
                {
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control"} });
                }
                else
                {
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } });
                }

            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (User.IsInRole("Administrator"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Admin, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.CheckBoxFor(model => model.Admin)
                    @Html.ValidationMessageFor(model => model.Admin, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Courses, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <table>
                        <thead>
                            <tr>
                                <td>Course</td>
                                <td>Role</td>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var course in Model.Courses)
                            {
                                enumList.ForEach(x => x.Selected = Model.UserCourses.Any(j => j.CourseId == course.Id) &&
                                                                   (int.Parse(x.Value) == ((int)Model.UserCourses.FirstOrDefault(j => j.CourseId == course.Id).CoderRole)));
                                <tr>
                                    <td>@course.Title</td>
                                    <td>@Html.DropDownList(("Course_" + course.Id), enumList, "---")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<a href=@Url.Action("Details", "Users", new { id = Model.UserId })><i class="fa fa-arrow-left"></i></a>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
