@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,300italic,400italic,500,500italic,700,700italic);
@import url(https://fonts.googleapis.com/css?family=Lato:400,700,300,300italic,400italic,700italic);
html {
  height: 100%;
}

body {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  padding-top: 50px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  overflow-y: scroll;
}

#main {
  margin-top: 20px;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

/* Set padding to keep content from hitting the edges */
.body-content {
  padding-left: 15px;
  padding-right: 15px;
}

/* Override the default bootstrap behavior where horizontal description lists 
   will truncate terms that are too long to fit in the left column 
*/
.dl-horizontal dt {
  white-space: normal;
}

a {
  color: #3498db;
}

a :hover {
  color: #34495e;
}

hr {
  height: 12px;
  border: 0;
  border-bottom: 1px solid #ccc;
}

#header {
  top: 0;
  left: 0;
  margin: 0 auto;
  background: #34495e;
  border-bottom: none;
  font-size: 15px;
  color: #fff;
  height: 60px;
}

#header .nav a {
  color: #fff;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
  padding-top: 20px;
  height: 60px;
}

#header .nav a:hover {
  background: #fff;
  color: #e67e22;
}

#header .navbar-header:hover #headLogo svg path {
  fill: #e67e22;
}

#header .navbar-header:hover .navbar-brand.logoTitle {
  color: #e67e22;
}

#header .navbar-brand.logoTitle {
  color: #fff;
  margin-right: 10px;
  font-size: 20px;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
  padding-top: 20px;
  height: 60px;
}

#headLogo {
  float: left;
  padding: 12px 15px 5px 0;
  height: 60px;
}

#headLogo svg {
  display: block;
  width: 35px;
}

#headLogo svg path {
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
}

.projects {
  margin-top: 10px;
}

.allOfIt {
  margin-top: 15px;
}

.projectBox {
  position: relative;
  min-height: 220px;
  min-width: 225px;
  border: solid;
  font-size: 13px;
  text-align: center;
  border: 5px solid white;
  color: rgba(52, 73, 94, 0.85);
  margin-bottom: 10px;
  background-color: rgba(255, 255, 255, 0.95);
}

.projectBox:hover {
  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.05);
}

.projectBox .name {
  font-size: 16px;
  margin-bottom: 1px;
}

.projectBox .course {
  font-style: oblique;
}

.projectBox .value {
  display: inline-block;
  width: 100%;
  margin: 10px 0 5px 0;
}

.projectBox .date {
  position: absolute;
  bottom: 0;
  display: block;
  margin-left: 0;
  font-size: 10px;
}

.projectBox .date .start {
  width: 50%;
  text-align: left;
}

.projectBox .date .end {
  width: 50%;
  text-align: right;
}

.projectBox.fluid {
  max-height: none;
  margin-bottom: 10px;
}

#proText {
  color: #34495e;
}

.proContainer {
  width: 80%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 10px;
  text-align: center;
}

caption {
  font-size: 20px;
}

.remaining {
  margin-top: 10px;
  margin-bottom: 25px;
}

.sideTable {
  border: solid;
  border: 3px solid white;
  padding-top: -100px;
}

.sideTable ~ .sideTable {
  margin-top: 22.5px;
}

.oldBox {
  opacity: .5;
}

.oldBox:hover {
  opacity: 0.9 !important;
}

.oldBox:hover #endDate {
  opacity: 0.8 !important;
}

.oldBox #endDate {
  opacity: .35;
  color: red;
}

#endDate {
  padding-top: 15px;
  font-size: 15px;
}

.allCourses {
  margin-top: 10px;
}

.course-details {
  margin-bottom: 50px;
}

.course-box {
  clear: left;
  margin-bottom: 50px;
}

.course-box h3 {
  margin-top: 0;
}

.course-box .coder-table {
  margin-top: 0;
}

#cancelCreate {
  font-size: 30px;
}

.coder-table {
  margin-top: 10px;
  width: 100%;
  border: 1px solid #34495e;
  border-collapse: separate;
}

.coder-table thead > tr {
  border-bottom: 1px solid #34495e;
  background-color: #34495e;
}

.coder-table thead > tr th {
  font-weight: 400;
  padding: 20px 15px;
  color: #f9f9f9;
}

.coder-table thead > tr th:last-child {
  text-align: right;
}

.coder-table tr {
  background-color: ghostwhite;
}

.coder-table tr td {
  padding: 15px 0;
  padding-left: 15px;
}

.coder-table tr td:not(:last-child) a {
  color: #333;
}

.coder-table tr td:not(:last-child) a:hover {
  color: #e67e22;
}

.coder-table tr td:last-child {
  text-align: right;
  padding-right: 20px;
}

.coder-table tr:nth-child(2n) {
  background-color: #fff;
}

#footer {
  margin-top: 50px;
  color: #fff;
  background: #34495e;
}

#footer .container {
  padding-top: 40px;
  padding-bottom: 30px;
}

body {
  font-family: 'Roboto', sans-serif;
  font-family: 'Lato', sans-serif;
  background-color: ghostwhite;
}

a {
  color: #e67e22;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
}

a:hover {
  text-decoration: none;
  color: #64350b;
}

a:focus {
  text-decoration: none;
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: #333;
}

h1 a:hover,
h2 a:hover,
h3 a:hover,
h4 a:hover,
h5 a:hover,
h6 a:hover {
  color: #e67e22;
}

h1 {
  display: inline-block;
  padding-top: 10px;
}

h2 {
  font-size: 24px;
}

span.text-value, span.text-caption {
  padding: 10px 0;
}

span.text-caption {
  font-weight: 600;
}

.breadcrumbs a {
  color: #333;
  font-weight: 800;
}

.details-box {
  margin: 10px 0;
}

.details-box .description {
  margin-top: 30px;
}

.editButton {
  display: inline-block;
  margin-left: 10px;
}

i.fa {
  font-size: 24px;
  margin: 0 20px;
}

body.login {
  background: #34495e;
}

.loginCenter {
  margin: 0 auto;
  padding: 10px;
  max-width: 400px;
}

.loginCenter h1 {
  margin-top: 0;
  margin-bottom: 25px;
  text-align: center;
}

.loginCenter .logo svg {
  display: block;
  width: 200px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;
}

.loginCenter #loginForm {
  color: #fff;
}

.loginCenter .btn {
  width: 100%;
}

#loginForm {
  padding: 1px 10px 1px 10px;
  border-style: solid;
  border-width: medium;
  border-color: #34495e;
}

#userDetailsRightSide {
  padding-left: 0;
}

dd {
  font-size: 16px;
  -moz-text-align-last: left;
       text-align-last: left;
}

#editor {
  position: relative;
  display: block;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

#projectName {
  width: 100%;
  float: left;
  display: block;
}

#taskName {
  display: block;
  font-size: large;
}

#bestSub {
  width: 100%;
  float: right;
  text-align: right;
}

.small {
  text-align: left;
  display: inline-block;
}

.small .left {
  float: left;
}

.small .right {
  float: right;
}

#tests .test {
  margin-bottom: 20px;
  border: 1px solid #ccc;
  padding: 30px;
}

#tests h3,
#tests .remove-test {
  display: inline-block;
}

#taskFiles {
  margin-top: 20px;
  min-height: 231px;
}

.upload-area {
  position: relative;
  display: inline-block;
  min-height: 325px;
  max-height: auto !important;
}

.upload-area a {
  margin-top: 10px;
}

.upload-area i {
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}

.upload-area:hover i {
  margin-bottom: 20px !important;
}

.upload-area:before {
  /*content: "";
        position: absolute;
        top: 10px;
        right: 10px;
        bottom: 10px;
        left: 10px;
        border: 2px dashed #bbb;
        border-radius: 5px;*/
}

.upload-area .dz-message {
  height: 80px;
  position: relative;
  margin: 60px 0;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.upload-area .dz-message span {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.upload-area .dz-message span i {
  display: block;
  font-size: 60px;
  margin-bottom: 10px;
}

.upload-area .dz-preview {
  margin-bottom: 40px;
}

.upload-area .dz-preview .dz-success-mark svg g {
  fill: green;
}

.upload-area .dz-preview .dz-error-mark svg g {
  fill: red;
}

.upload-area .dz-preview .dz-error-message p {
  font-weight: 800;
}

/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */
.coderDropzone, .coderDropzone * {
  box-sizing: border-box;
}

.coderDropzone {
  position: relative;
}

.coderDropzone .dz-preview {
  position: relative;
  display: inline-block;
  width: 120px;
  margin: 0.5em;
}

.coderDropzone .dz-preview .dz-progress {
  display: block;
  height: 15px;
  border: 1px solid #aaa;
}

.coderDropzone .dz-preview .dz-progress .dz-upload {
  display: block;
  height: 100%;
  width: 0;
  background: green;
}

.coderDropzone .dz-preview .dz-error-message {
  color: red;
  display: none;
}

.coderDropzone .dz-preview.dz-error .dz-error-message, .coderDropzone .dz-preview.dz-error .dz-error-mark {
  display: block;
}

.coderDropzone .dz-preview.dz-success .dz-success-mark {
  display: block;
}

.coderDropzone .dz-preview .dz-error-mark, .coderDropzone .dz-preview .dz-success-mark {
  position: absolute;
  display: none;
  left: 30px;
  top: 30px;
  width: 54px;
  height: 58px;
  left: 50%;
  margin-left: -27px;
}

/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */
@-webkit-keyframes passing-through {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30%, 70% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@keyframes passing-through {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30%, 70% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@-webkit-keyframes slide-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@keyframes slide-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  10% {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  20% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  10% {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  20% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

.coderDropzone, .coderDropzone * {
  box-sizing: border-box;
}

.coderDropzone {
  min-height: 150px;
  border: 2px solid rgba(0, 0, 0, 0.3);
  background: white;
  padding: 20px 20px;
}

.coderDropzone.dz-clickable {
  cursor: pointer;
}

.coderDropzone.dz-clickable * {
  cursor: default;
}

.coderDropzone.dz-clickable .dz-message, .coderDropzone.dz-clickable .dz-message * {
  cursor: pointer;
}

.coderDropzone.dz-started .dz-message {
  display: none;
}

.coderDropzone.dz-drag-hover {
  border-style: solid;
}

.coderDropzone.dz-drag-hover .dz-message {
  opacity: 0.5;
}

.coderDropzone .dz-message {
  text-align: center;
  margin: 2em 0;
}

.coderDropzone .dz-preview {
  position: relative;
  display: inline-block;
  vertical-align: top;
  margin: 16px;
  min-height: 100px;
}

.coderDropzone .dz-preview:hover {
  z-index: 1000;
}

.coderDropzone .dz-preview:hover .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview.dz-file-preview .dz-image {
  border-radius: 20px;
  background: #999;
  background: -webkit-linear-gradient(top, #eee, #ddd);
  background: linear-gradient(to bottom, #eee, #ddd);
}

.coderDropzone .dz-preview.dz-file-preview .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview.dz-image-preview {
  background: white;
}

.coderDropzone .dz-preview.dz-image-preview .dz-details {
  -webkit-transition: opacity 0.2s linear;
  transition: opacity 0.2s linear;
}

.coderDropzone .dz-preview .dz-remove {
  font-size: 14px;
  text-align: center;
  display: block;
  cursor: pointer;
  border: none;
}

.coderDropzone .dz-preview .dz-remove:hover {
  text-decoration: underline;
}

.coderDropzone .dz-preview:hover .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview .dz-details {
  z-index: 20;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  font-size: 13px;
  min-width: 100%;
  max-width: 100%;
  padding: 2em 1em;
  text-align: center;
  color: rgba(0, 0, 0, 0.9);
  line-height: 150%;
}

.coderDropzone .dz-preview .dz-details .dz-size {
  margin-bottom: 1em;
  font-size: 16px;
}

.coderDropzone .dz-preview .dz-details .dz-filename {
  white-space: nowrap;
}

.coderDropzone .dz-preview .dz-details .dz-filename:hover span {
  border: 1px solid rgba(200, 200, 200, 0.8);
  background-color: rgba(255, 255, 255, 0.8);
}

.coderDropzone .dz-preview .dz-details .dz-filename:not(:hover) {
  overflow: hidden;
  text-overflow: ellipsis;
}

.coderDropzone .dz-preview .dz-details .dz-filename:not(:hover) span {
  border: 1px solid transparent;
}

.coderDropzone .dz-preview .dz-details .dz-filename span, .coderDropzone .dz-preview .dz-details .dz-size span {
  background-color: rgba(255, 255, 255, 0.4);
  padding: 0 0.4em;
  border-radius: 3px;
}

.coderDropzone .dz-preview:hover .dz-image img {
  -webkit-transform: scale(1.05, 1.05);
  transform: scale(1.05, 1.05);
  -webkit-filter: blur(8px);
  filter: blur(8px);
}

.coderDropzone .dz-preview .dz-image {
  border-radius: 20px;
  overflow: hidden;
  width: 120px;
  height: 120px;
  position: relative;
  display: block;
  z-index: 10;
}

.coderDropzone .dz-preview .dz-image img {
  display: block;
}

.coderDropzone .dz-preview.dz-success .dz-success-mark {
  -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
  animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.coderDropzone .dz-preview.dz-error .dz-error-mark {
  opacity: 1;
  -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
  animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.coderDropzone .dz-preview .dz-success-mark, .coderDropzone .dz-preview .dz-error-mark {
  pointer-events: none;
  opacity: 0;
  z-index: 500;
  position: absolute;
  display: block;
  top: 50%;
  left: 50%;
  margin-left: -27px;
  margin-top: -27px;
}

.coderDropzone .dz-preview .dz-success-mark svg, .coderDropzone .dz-preview .dz-error-mark svg {
  display: block;
  width: 54px;
  height: 54px;
}

.coderDropzone .dz-preview.dz-processing .dz-progress {
  opacity: 1;
  -webkit-transition: all 0.2s linear;
  transition: all 0.2s linear;
}

.coderDropzone .dz-preview.dz-complete .dz-progress {
  opacity: 0;
  -webkit-transition: opacity 0.4s ease-in;
  transition: opacity 0.4s ease-in;
}

.coderDropzone .dz-preview:not(.dz-processing) .dz-progress {
  -webkit-animation: pulse 6s ease infinite;
  animation: pulse 6s ease infinite;
}

.coderDropzone .dz-preview .dz-progress {
  opacity: 1;
  z-index: 1000;
  pointer-events: none;
  position: absolute;
  height: 16px;
  left: 50%;
  top: 50%;
  margin-top: -8px;
  width: 80px;
  margin-left: -40px;
  background: rgba(255, 255, 255, 0.9);
  -webkit-transform: scale(1);
  border-radius: 8px;
  overflow: hidden;
}

.coderDropzone .dz-preview .dz-progress .dz-upload {
  background: #333;
  background: -webkit-linear-gradient(top, #666, #444);
  background: linear-gradient(to bottom, #666, #444);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 0;
  -webkit-transition: width 300ms ease-in-out;
  transition: width 300ms ease-in-out;
}

.coderDropzone .dz-preview.dz-error .dz-error-message {
  display: block;
}

.coderDropzone .dz-preview.dz-error:hover .dz-error-message {
  opacity: 1;
  pointer-events: auto;
}

.coderDropzone .dz-preview .dz-error-message {
  pointer-events: none;
  z-index: 1000;
  position: absolute;
  display: block;
  display: none;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
  border-radius: 8px;
  font-size: 13px;
  top: 130px;
  left: -10px;
  width: 140px;
  background: #be2626;
  background: -webkit-linear-gradient(top, #be2626, #a92222);
  background: linear-gradient(to bottom, #be2626, #a92222);
  padding: 0.5em 1.2em;
  color: white;
}

.coderDropzone .dz-preview .dz-error-message:after {
  content: '';
  position: absolute;
  top: -6px;
  left: 64px;
  width: 0;
  height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 6px solid #be2626;
}

.http-error-box {
  margin-top: 80px;
  background: white;
}

.http-error-box .container {
  padding: 120px;
}

.http-error-box h1 {
  font-size: 140px;
  font-weight: 600;
  color: #e67e22;
  display: block;
  text-align: center;
  margin-bottom: 0;
}

.http-error-box h2 {
  text-align: center;
  color: #34495e;
  font-size: 60px;
  font-weight: 600;
  margin-top: 20px;
}

.http-error-box .error-buttons {
  padding: 40px;
  margin-top: 80px;
  margin-bottom: 0px;
  text-align: center;
}

.http-error-box .error-buttons .error-button {
  padding: 20px 40px;
  background: #34495e;
  display: inline-block;
}

.http-error-box .error-buttons .error-button:first-child {
  margin-right: 40px;
  cursor: pointer;
}

/*# sourceMappingURL=data:application/json;base64, */
