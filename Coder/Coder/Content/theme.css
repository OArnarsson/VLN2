@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,300italic,400italic,500,500italic,700,700italic);
@import url(https://fonts.googleapis.com/css?family=Lato:400,700,300,300italic,400italic,700italic);
html {
  height: 100%;
}

body {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  padding-top: 50px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  overflow-y: scroll;
}

#main {
  margin-top: 20px;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

/* Set padding to keep content from hitting the edges */
.body-content {
  padding-left: 15px;
  padding-right: 15px;
}

/* Override the default bootstrap behavior where horizontal description lists 
   will truncate terms that are too long to fit in the left column 
*/
.dl-horizontal dt {
  white-space: normal;
}

a {
  color: #3498db;
}

a :hover {
  color: #34495e;
}

hr {
  height: 12px;
  border: 0;
  border-bottom: 1px solid #ccc;
}

#header {
  top: 0;
  left: 0;
  margin: 0 auto;
  background: #34495e;
  border-bottom: none;
  font-size: 15px;
  color: #fff;
  height: 60px;
}

#header .nav a {
  color: #fff;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
  padding-top: 20px;
  height: 60px;
}

#header .nav a:hover {
  background: #fff;
  color: #e67e22;
}

#header .navbar-header:hover #headLogo svg path {
  fill: #e67e22;
}

#header .navbar-header:hover .navbar-brand.logoTitle {
  color: #e67e22;
}

#header .navbar-brand.logoTitle {
  color: #fff;
  margin-right: 10px;
  font-size: 20px;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
  padding-top: 20px;
  height: 60px;
}

#headLogo {
  float: left;
  padding: 12px 15px 5px 0;
  height: 60px;
}

#headLogo svg {
  display: block;
  width: 35px;
}

#headLogo svg path {
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
}

.projects {
  margin-top: 10px;
}

.allOfIt {
  margin-top: 15px;
}

.projectBox {
  position: relative;
  min-height: 220px;
  min-width: 225px;
  border: solid;
  font-size: 13px;
  text-align: center;
  border: 5px solid white;
  color: rgba(52, 73, 94, 0.85);
  margin-bottom: 10px;
  background-color: rgba(255, 255, 255, 0.95);
}

.projectBox:hover {
  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.05);
}

.projectBox .name {
  font-size: 16px;
  margin-bottom: 1px;
}

.projectBox .course {
  font-style: oblique;
}

.projectBox .value {
  display: inline-block;
  width: 100%;
  margin: 10px 0 5px 0;
}

.projectBox .date {
  position: absolute;
  bottom: 0;
  display: block;
  margin-left: 0;
  font-size: 10px;
}

.projectBox .date .start {
  width: 50%;
  text-align: left;
}

.projectBox .date .end {
  width: 50%;
  text-align: right;
}

.projectBox.fluid {
  max-height: none;
  margin-bottom: 10px;
}

#proText {
  color: #34495e;
}

.proContainer {
  width: 80%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 10px;
  text-align: center;
}

caption {
  font-size: 20px;
}

.remaining {
  margin-top: 10px;
  margin-bottom: 25px;
}

.sideTable {
  border: solid;
  border: 3px solid white;
  padding-top: -100px;
}

.sideTable ~ .sideTable {
  margin-top: 22.5px;
}

.oldBox {
  opacity: .5;
}

.oldBox:hover {
  opacity: 0.9 !important;
}

.oldBox:hover #endDate {
  opacity: 0.8 !important;
}

.oldBox #endDate {
  opacity: .35;
  color: red;
}

#endDate {
  padding-top: 15px;
  font-size: 15px;
}

.allCourses {
  margin-top: 10px;
}

.course-details {
  margin-bottom: 50px;
}

.course-box {
  clear: left;
  margin-bottom: 50px;
}

.course-box h3 {
  margin-top: 0;
}

.course-box .coder-table {
  margin-top: 0;
}

.coder-table {
  margin-top: 10px;
  width: 100%;
  border: 1px solid #34495e;
  border-collapse: separate;
}

.coder-table thead > tr {
  border-bottom: 1px solid #34495e;
  background-color: #34495e;
}

.coder-table thead > tr th {
  font-weight: 400;
  padding: 20px 15px;
  color: #f9f9f9;
}

.coder-table thead > tr th:last-child {
  text-align: right;
}

.coder-table tr {
  background-color: ghostwhite;
}

.coder-table tr td {
  padding: 15px 0;
  padding-left: 15px;
}

.coder-table tr td:not(:last-child) a {
  color: #333;
}

.coder-table tr td:not(:last-child) a:hover {
  color: #e67e22;
}

.coder-table tr td:last-child {
  text-align: right;
  padding-right: 20px;
}

.coder-table tr:nth-child(2n) {
  background-color: #fff;
}

#footer {
  margin-top: 50px;
  color: #fff;
  background: #34495e;
}

#footer .container {
  padding-top: 40px;
  padding-bottom: 30px;
}

body {
  font-family: 'Roboto', sans-serif;
  font-family: 'Lato', sans-serif;
  background-color: ghostwhite;
}

a {
  color: #e67e22;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
}

a:hover {
  text-decoration: none;
  color: #64350b;
}

a:focus {
  text-decoration: none;
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: #333;
}

h1 a:hover,
h2 a:hover,
h3 a:hover,
h4 a:hover,
h5 a:hover,
h6 a:hover {
  color: #e67e22;
}

h1 {
  display: inline-block;
  padding-top: 10px;
}

h2 {
  font-size: 24px;
}

span.text-value, span.text-caption {
  padding: 10px 0;
}

span.text-caption {
  font-weight: 600;
}

.breadcrumbs a {
  color: #333;
  font-weight: 800;
}

.details-box {
  margin: 10px 0;
}

.details-box .description {
  margin-top: 30px;
}

.editButton {
  display: inline-block;
  margin-left: 10px;
}

i.fa {
  font-size: 24px;
  margin: 0 20px;
}

body.login {
  background: #34495e;
}

.loginCenter {
  margin: 0 auto;
  padding: 10px;
  max-width: 400px;
}

.loginCenter h1 {
  margin-top: 0;
  margin-bottom: 25px;
  text-align: center;
}

.loginCenter .logo svg {
  display: block;
  width: 200px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;
}

.loginCenter #loginForm {
  color: #fff;
}

.loginCenter .btn {
  width: 100%;
}

#loginForm {
  padding: 1px 10px 1px 10px;
  border-style: solid;
  border-width: medium;
  border-color: #34495e;
}

#userDetailsRightSide {
  padding-left: 0;
}

dd {
  font-size: 16px;
  -moz-text-align-last: left;
       text-align-last: left;
}

#editor {
  position: relative;
  display: block;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

#projectName {
  width: 100%;
  float: left;
  display: block;
}

#taskName {
  display: block;
  font-size: large;
}

#bestSub {
  width: 100%;
  float: right;
  text-align: right;
}

.small {
  text-align: left;
  display: inline-block;
}

.small .left {
  float: left;
}

.small .right {
  float: right;
}

#tests .test {
  margin-bottom: 20px;
  border: 1px solid #ccc;
  padding: 30px;
}

#tests h3,
#tests .remove-test {
  display: inline-block;
}

#taskFiles {
  margin-top: 20px;
  min-height: 231px;
}

.upload-area {
  position: relative;
  display: inline-block;
  min-height: 325px;
  max-height: auto !important;
}

.upload-area a {
  margin-top: 10px;
}

.upload-area i {
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}

.upload-area:hover i {
  margin-bottom: 20px !important;
}

.upload-area:before {
  /*content: "";
        position: absolute;
        top: 10px;
        right: 10px;
        bottom: 10px;
        left: 10px;
        border: 2px dashed #bbb;
        border-radius: 5px;*/
}

.upload-area .dz-message {
  height: 80px;
  position: relative;
  margin: 60px 0;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.upload-area .dz-message span {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.upload-area .dz-message span i {
  display: block;
  font-size: 60px;
  margin-bottom: 10px;
}

.upload-area .dz-preview {
  margin-bottom: 40px;
}

.upload-area .dz-preview .dz-success-mark svg g {
  fill: green;
}

.upload-area .dz-preview .dz-error-mark svg g {
  fill: red;
}

.upload-area .dz-preview .dz-error-message p {
  font-weight: 800;
}

/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */
.coderDropzone, .coderDropzone * {
  box-sizing: border-box;
}

.coderDropzone {
  position: relative;
}

.coderDropzone .dz-preview {
  position: relative;
  display: inline-block;
  width: 120px;
  margin: 0.5em;
}

.coderDropzone .dz-preview .dz-progress {
  display: block;
  height: 15px;
  border: 1px solid #aaa;
}

.coderDropzone .dz-preview .dz-progress .dz-upload {
  display: block;
  height: 100%;
  width: 0;
  background: green;
}

.coderDropzone .dz-preview .dz-error-message {
  color: red;
  display: none;
}

.coderDropzone .dz-preview.dz-error .dz-error-message, .coderDropzone .dz-preview.dz-error .dz-error-mark {
  display: block;
}

.coderDropzone .dz-preview.dz-success .dz-success-mark {
  display: block;
}

.coderDropzone .dz-preview .dz-error-mark, .coderDropzone .dz-preview .dz-success-mark {
  position: absolute;
  display: none;
  left: 30px;
  top: 30px;
  width: 54px;
  height: 58px;
  left: 50%;
  margin-left: -27px;
}

/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */
@-webkit-keyframes passing-through {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30%, 70% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@keyframes passing-through {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30%, 70% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@-webkit-keyframes slide-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@keyframes slide-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  10% {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  20% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  10% {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  20% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

.coderDropzone, .coderDropzone * {
  box-sizing: border-box;
}

.coderDropzone {
  min-height: 150px;
  border: 2px solid rgba(0, 0, 0, 0.3);
  background: white;
  padding: 20px 20px;
}

.coderDropzone.dz-clickable {
  cursor: pointer;
}

.coderDropzone.dz-clickable * {
  cursor: default;
}

.coderDropzone.dz-clickable .dz-message, .coderDropzone.dz-clickable .dz-message * {
  cursor: pointer;
}

.coderDropzone.dz-started .dz-message {
  display: none;
}

.coderDropzone.dz-drag-hover {
  border-style: solid;
}

.coderDropzone.dz-drag-hover .dz-message {
  opacity: 0.5;
}

.coderDropzone .dz-message {
  text-align: center;
  margin: 2em 0;
}

.coderDropzone .dz-preview {
  position: relative;
  display: inline-block;
  vertical-align: top;
  margin: 16px;
  min-height: 100px;
}

.coderDropzone .dz-preview:hover {
  z-index: 1000;
}

.coderDropzone .dz-preview:hover .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview.dz-file-preview .dz-image {
  border-radius: 20px;
  background: #999;
  background: -webkit-linear-gradient(top, #eee, #ddd);
  background: linear-gradient(to bottom, #eee, #ddd);
}

.coderDropzone .dz-preview.dz-file-preview .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview.dz-image-preview {
  background: white;
}

.coderDropzone .dz-preview.dz-image-preview .dz-details {
  -webkit-transition: opacity 0.2s linear;
  transition: opacity 0.2s linear;
}

.coderDropzone .dz-preview .dz-remove {
  font-size: 14px;
  text-align: center;
  display: block;
  cursor: pointer;
  border: none;
}

.coderDropzone .dz-preview .dz-remove:hover {
  text-decoration: underline;
}

.coderDropzone .dz-preview:hover .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview .dz-details {
  z-index: 20;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  font-size: 13px;
  min-width: 100%;
  max-width: 100%;
  padding: 2em 1em;
  text-align: center;
  color: rgba(0, 0, 0, 0.9);
  line-height: 150%;
}

.coderDropzone .dz-preview .dz-details .dz-size {
  margin-bottom: 1em;
  font-size: 16px;
}

.coderDropzone .dz-preview .dz-details .dz-filename {
  white-space: nowrap;
}

.coderDropzone .dz-preview .dz-details .dz-filename:hover span {
  border: 1px solid rgba(200, 200, 200, 0.8);
  background-color: rgba(255, 255, 255, 0.8);
}

.coderDropzone .dz-preview .dz-details .dz-filename:not(:hover) {
  overflow: hidden;
  text-overflow: ellipsis;
}

.coderDropzone .dz-preview .dz-details .dz-filename:not(:hover) span {
  border: 1px solid transparent;
}

.coderDropzone .dz-preview .dz-details .dz-filename span, .coderDropzone .dz-preview .dz-details .dz-size span {
  background-color: rgba(255, 255, 255, 0.4);
  padding: 0 0.4em;
  border-radius: 3px;
}

.coderDropzone .dz-preview:hover .dz-image img {
  -webkit-transform: scale(1.05, 1.05);
  transform: scale(1.05, 1.05);
  -webkit-filter: blur(8px);
  filter: blur(8px);
}

.coderDropzone .dz-preview .dz-image {
  border-radius: 20px;
  overflow: hidden;
  width: 120px;
  height: 120px;
  position: relative;
  display: block;
  z-index: 10;
}

.coderDropzone .dz-preview .dz-image img {
  display: block;
}

.coderDropzone .dz-preview.dz-success .dz-success-mark {
  -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
  animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.coderDropzone .dz-preview.dz-error .dz-error-mark {
  opacity: 1;
  -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
  animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.coderDropzone .dz-preview .dz-success-mark, .coderDropzone .dz-preview .dz-error-mark {
  pointer-events: none;
  opacity: 0;
  z-index: 500;
  position: absolute;
  display: block;
  top: 50%;
  left: 50%;
  margin-left: -27px;
  margin-top: -27px;
}

.coderDropzone .dz-preview .dz-success-mark svg, .coderDropzone .dz-preview .dz-error-mark svg {
  display: block;
  width: 54px;
  height: 54px;
}

.coderDropzone .dz-preview.dz-processing .dz-progress {
  opacity: 1;
  -webkit-transition: all 0.2s linear;
  transition: all 0.2s linear;
}

.coderDropzone .dz-preview.dz-complete .dz-progress {
  opacity: 0;
  -webkit-transition: opacity 0.4s ease-in;
  transition: opacity 0.4s ease-in;
}

.coderDropzone .dz-preview:not(.dz-processing) .dz-progress {
  -webkit-animation: pulse 6s ease infinite;
  animation: pulse 6s ease infinite;
}

.coderDropzone .dz-preview .dz-progress {
  opacity: 1;
  z-index: 1000;
  pointer-events: none;
  position: absolute;
  height: 16px;
  left: 50%;
  top: 50%;
  margin-top: -8px;
  width: 80px;
  margin-left: -40px;
  background: rgba(255, 255, 255, 0.9);
  -webkit-transform: scale(1);
  border-radius: 8px;
  overflow: hidden;
}

.coderDropzone .dz-preview .dz-progress .dz-upload {
  background: #333;
  background: -webkit-linear-gradient(top, #666, #444);
  background: linear-gradient(to bottom, #666, #444);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 0;
  -webkit-transition: width 300ms ease-in-out;
  transition: width 300ms ease-in-out;
}

.coderDropzone .dz-preview.dz-error .dz-error-message {
  display: block;
}

.coderDropzone .dz-preview.dz-error:hover .dz-error-message {
  opacity: 1;
  pointer-events: auto;
}

.coderDropzone .dz-preview .dz-error-message {
  pointer-events: none;
  z-index: 1000;
  position: absolute;
  display: block;
  display: none;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
  border-radius: 8px;
  font-size: 13px;
  top: 130px;
  left: -10px;
  width: 140px;
  background: #be2626;
  background: -webkit-linear-gradient(top, #be2626, #a92222);
  background: linear-gradient(to bottom, #be2626, #a92222);
  padding: 0.5em 1.2em;
  color: white;
}

.coderDropzone .dz-preview .dz-error-message:after {
  content: '';
  position: absolute;
  top: -6px;
  left: 64px;
  width: 0;
  height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 6px solid #be2626;
}

.http-error-box {
  margin-top: 80px;
  background: white;
}

.http-error-box .container {
  padding: 120px;
}

.http-error-box h1 {
  font-size: 140px;
  font-weight: 600;
  color: #e67e22;
  display: block;
  text-align: center;
  margin-bottom: 0;
}

.http-error-box h2 {
  text-align: center;
  color: #34495e;
  font-size: 60px;
  font-weight: 600;
  margin-top: 20px;
}

.http-error-box .error-buttons {
  padding: 40px;
  margin-top: 80px;
  margin-bottom: 0px;
  text-align: center;
}

.http-error-box .error-buttons .error-button {
  padding: 20px 40px;
  background: #34495e;
  display: inline-block;
}

.http-error-box .error-buttons .error-button:first-child {
  margin-right: 40px;
  cursor: pointer;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRlbnQuc2NzcyIsImxheW91dC5zY3NzIiwidmFyaWFibGVzLnNjc3MiLCJoZWFkZXIuc2NzcyIsInByb2plY3RzLnNjc3MiLCJjb3Vyc2VzLnNjc3MiLCJ0YWJsZXMuc2NzcyIsImZvb3Rlci5zY3NzIiwibG9naW4uc2NzcyIsInVzZXJEZXRhaWxzLnNjc3MiLCJhY2Uuc2NzcyIsInRhc2tEZXRhaWxzLnNjc3MiLCJiYXNpYy5zY3NzIiwiZHJvcHpvbmUuc2NzcyIsInRoZW1lLmNzcyIsImVycm9ycy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9IQUFZO0FBQ1osb0dBQVk7QUNEWjtFQUNJLGFBQWE7Q0FDaEI7O0FBRUQ7RUFDSSxxQkFBYztFQUFkLHNCQUFjO0VBQWQscUJBQWM7RUFBZCxjQUFjO0VBQ2QsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQiw2QkFBdUI7RUFBdkIsOEJBQXVCO0VBQXZCLCtCQUF1QjtNQUF2QiwyQkFBdUI7VUFBdkIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtDQUN0Qjs7QUFFRDtFQUNJLGlCQUFpQjtFQUNqQixvQkFBUTtFQUFSLGdCQUFRO01BQVIsWUFBUTtVQUFSLFFBQVE7Q0FDWDs7QUFFRCx3REFBd0Q7QUFDeEQ7RUFDSSxtQkFBbUI7RUFDbkIsb0JBQW9CO0NBQ3ZCOztBQUVEOztFQUVFO0FBQ0Y7RUFDSSxvQkFBb0I7Q0FDdkI7O0FBRUQ7RUFDSSxlQzdCaUI7Q0RrQ3BCOztBQU5EO0VBSVEsZUNsQ2E7Q0RtQ2hCOztBQUdMO0VBQ0ksYUFBYTtFQUViLFVBQVU7RUFDViw4QkFBOEI7Q0FDakM7O0FFM0NEO0VBQ0ksT0FBTztFQUNQLFFBQVE7RUFDUixlQUFlO0VBQ2Ysb0JESmlCO0VDS2pCLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLGFBQWE7Q0FnQ2hCOztBQXhDRDtFQVdRLFlBQVk7RUFDWixpQ0FBeUI7RUFBekIseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixhQUFhO0NBTWhC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QjtFQUNqQixpQkFBaUI7Q0FDcEI7O0FBdkJMO0VBMEJRLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLG1CQUFtQjtDQVl0Qjs7QUF6Q0w7RUFnQ1ksbUJBQW1CO0VBQ25CLG9CYmpDUztFYWtDVCxzQkFBc0I7Q0FNekI7O0FBeENUO0VBcUNnQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0NBQ25CIiwiZmlsZSI6InRoZW1lLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIu+7v0BpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1Sb2JvdG86NDAwLDMwMCwzMDBpdGFsaWMsNDAwaXRhbGljLDUwMCw1MDBpdGFsaWMsNzAwLDcwMGl0YWxpYyk7XG5AaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TGF0bzo0MDAsNzAwLDMwMCwzMDBpdGFsaWMsNDAwaXRhbGljLDcwMGl0YWxpYyk7XG5cbmJvZHkge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LWZhbWlseTogJ0xhdG8nLCBzYW5zLXNlcmlmO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdob3N0d2hpdGU7XG59XG5cbmEge1xuICAgIGNvbG9yOiAkY29sb3ItYWN0aW9uO1xuICAgIHRyYW5zaXRpb246IC40cyBlYXNlIGFsbDtcblxuICAgICY6aG92ZXIge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiBkYXJrZW4oJGNvbG9yLWFjdGlvbiwgMzAlKTtcbiAgICB9XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgICBhIHtcclxuICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci1hY3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgfVxufVxuXG5oMSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBhZGRpbmctdG9wOiAxMHB4O1xufVxuXG5oMiB7XG4gICAgZm9udC1zaXplOiAyNHB4O1xufVxuXG5zcGFuIHtcbiAgICAmLnRleHQtdmFsdWUsXG4gICAgJi50ZXh0LWNhcHRpb24ge1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgfVxuXG4gICAgJi50ZXh0LWNhcHRpb24ge1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgIH1cbn1cblxuLmJyZWFkY3J1bWJzIHtcbiAgICBhIHtcbiAgICAgICAgY29sb3I6ICMzMzM7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgfVxufVxuXG4uZGV0YWlscy1ib3gge1xuICAgIG1hcmdpbjogMTBweCAwO1xuXG4gICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICB9XG59XG5cbi5lZGl0QnV0dG9uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG59XG5cbmkuZmEge1xuICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICBtYXJnaW46IDAgMjBweDtcbn1cbiIsIu+7v2h0bWwge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBwYWRkaW5nLXRvcDogNTBweDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbn1cclxuXHJcbiNtYWluIHtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICBmbGV4OiAxO1xyXG59XHJcblxyXG4vKiBTZXQgcGFkZGluZyB0byBrZWVwIGNvbnRlbnQgZnJvbSBoaXR0aW5nIHRoZSBlZGdlcyAqL1xyXG4uYm9keS1jb250ZW50IHtcclxuICAgIHBhZGRpbmctbGVmdDogMTVweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbn1cclxuXHJcbi8qIE92ZXJyaWRlIHRoZSBkZWZhdWx0IGJvb3RzdHJhcCBiZWhhdmlvciB3aGVyZSBob3Jpem9udGFsIGRlc2NyaXB0aW9uIGxpc3RzIFxyXG4gICB3aWxsIHRydW5jYXRlIHRlcm1zIHRoYXQgYXJlIHRvbyBsb25nIHRvIGZpdCBpbiB0aGUgbGVmdCBjb2x1bW4gXHJcbiovXHJcbi5kbC1ob3Jpem9udGFsIGR0IHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgY29sb3I6ICRjb2xvci10aGlyZDtcclxuXHJcbiAgICA6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItZmlyc3Q7XHJcbiAgICB9XHJcbn1cclxuXHJcbmhyIHtcclxuICAgIGhlaWdodDogMTJweDtcclxuICAgIC8vbWFyZ2luOiAzMHB4IC05OTlweCAyMHB4O1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XHJcbn0iLCLvu78kY29sb3ItZmlyc3Q6ICMzNDQ5NWU7XHJcbiRjb2xvci1zZWNvbmQ6ICNmYmZjZmM7XHJcbiRjb2xvci10aGlyZDogIzM0OThkYjtcclxuXHJcbiRjb2xvci1hY3Rpb246ICNlNjdlMjI7Iiwi77u/I2hlYWRlciB7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItZmlyc3Q7XHJcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcblxyXG4gICAgLm5hdiBhIHtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICB0cmFuc2l0aW9uOiAuNHMgZWFzZSBhbGw7XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICAgICAgaGVpZ2h0OiA2MHB4O1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci1hY3Rpb247XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5uYXZiYXItaGVhZGVyOmhvdmVyIHtcclxuICAgICAgICAjaGVhZExvZ28gc3ZnIHBhdGgge1xyXG4gICAgICAgICAgICBmaWxsOiAkY29sb3ItYWN0aW9uO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm5hdmJhci1icmFuZC5sb2dvVGl0bGUge1xyXG4gICAgICAgICAgICBjb2xvcjogJGNvbG9yLWFjdGlvbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLm5hdmJhci1icmFuZC5sb2dvVGl0bGUge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogLjRzIGVhc2UgYWxsO1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiAyMHB4O1xyXG4gICAgICAgIGhlaWdodDogNjBweDtcclxuICAgIH1cclxufVxyXG5cclxuI2hlYWRMb2dvIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgcGFkZGluZzogMTJweCAxNXB4IDVweCAwO1xyXG4gICAgaGVpZ2h0OiA2MHB4O1xyXG5cclxuICAgIHN2ZyB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDM1cHg7XHJcblxyXG4gICAgICAgIHBhdGgge1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuNHMgZWFzZSBhbGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5wcm9qZWN0cyB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4uYWxsT2ZJdCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcblxyXG4ucHJvamVjdEJveCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBtaW4taGVpZ2h0OiAyMjBweDtcclxuICAgIG1pbi13aWR0aDoyMjVweDtcclxuICAgIGJvcmRlcjogc29saWQ7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICBcclxuICAgIGJvcmRlcjogNXB4IHNvbGlkIHdoaXRlO1xyXG4gICAgY29sb3I6IHJnYmEoNTIsIDczLCA5NCwgMC44NSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTUpOyBcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBib3gtc2hhZG93OiAxcHggMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAuMDUpXHJcbiAgICB9XHJcblxyXG4gICAgLm5hbWUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmNvdXJzZSB7XHJcbiAgICAgICAgZm9udC1zdHlsZTogb2JsaXF1ZTtcclxuICAgIH1cclxuXHJcbiAgICAudmFsdWUge1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDEwcHggMCA1cHggMDtcclxuICAgIH1cclxuXHJcbiAgICAuZGF0ZSB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgICBmb250LXNpemU6IDEwcHg7XHJcblxyXG4gICAgICAgIC5zdGFydCB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZW5kIHtcclxuICAgICAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4ucHJvamVjdEJveC5mbHVpZCB7XHJcbiAgICBtYXgtaGVpZ2h0OiBub25lO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuI3Byb1RleHQge1xyXG4gICAgY29sb3I6ICRjb2xvci1maXJzdDtcclxufVxyXG5cclxuLnByb0NvbnRhaW5lciB7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5jYXB0aW9uIHtcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxuLnJlbWFpbmluZyB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxufVxyXG5cclxuLnNpZGVUYWJsZSB7XHJcbiAgICBib3JkZXI6IHNvbGlkO1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgd2hpdGU7XHJcbiAgICBwYWRkaW5nLXRvcDotMTAwcHg7XHJcblxyXG4gICAgfiAuc2lkZVRhYmxlIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyMi41cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5vbGRCb3gge1xyXG4gICAgb3BhY2l0eSA6IC41O1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHkgOiAuOSFpbXBvcnRhbnQ7XHJcblxyXG4gICAgICAgICNlbmREYXRle1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAuOCFpbXBvcnRhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICNlbmREYXRlIHtcclxuICAgICAgICBvcGFjaXR5OiAuMzU7IFxyXG4gICAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbiNlbmREYXRlIHtcclxuICAgIHBhZGRpbmctdG9wOiAxNXB4O1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG59Iiwi77u/LmFsbENvdXJzZXMge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5jb3Vyc2UtZGV0YWlscyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG59XG5cbi5jb3Vyc2UtYm94IHtcclxuICAgIGNsZWFyOiBsZWZ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICAgIGgzIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgfVxyXG4gICAgLmNvZGVyLXRhYmxlIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgfVxyXG59Iiwi77u/LmNvZGVyLXRhYmxlIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjb2xvci1maXJzdDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XHJcblxyXG4gICAgdGhlYWQgPiB0ciB7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1maXJzdDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItZmlyc3Q7XHJcbiAgICAgICAgdGgge1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4IDE1cHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZjlmOWY5O1xyXG5cclxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnaG9zdHdoaXRlO1xyXG4gICAgICAgIHRkIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMTVweCAwO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0ZDpub3QoOmxhc3QtY2hpbGQpIGEge1xyXG4gICAgICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLWFjdGlvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGQ6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpudGgtY2hpbGQoMm4pIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCLvu78jZm9vdGVyIHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci1maXJzdDtcclxuICAgIC5jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAzMHB4O1xyXG4gICAgfVxyXG59Iiwi77u/Ym9keS5sb2dpbiB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItZmlyc3Q7XHJcbn1cclxuXHJcbi5sb2dpbkNlbnRlciB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG5cclxuICAgIGgxIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAwO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgIC5sb2dvIHtcclxuICAgICAgICBzdmcge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICNsb2dpbkZvcm0ge1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgfVxyXG5cclxuICAgIC5idG4ge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG5cclxuICAgIH1cclxufVxyXG5cclxuI2xvZ2luRm9ybSB7XHJcbiAgICBwYWRkaW5nOiAxcHggMTBweCAxcHggMTBweDtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItd2lkdGg6IG1lZGl1bTtcclxuICAgIGJvcmRlci1jb2xvcjogJGNvbG9yLWZpcnN0O1xyXG59Iiwi77u/I3VzZXJEZXRhaWxzUmlnaHRTaWRlIHtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxufVxyXG5cclxuZGQge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgdGV4dC1hbGlnbi1sYXN0OiBsZWZ0O1xyXG59Iiwi77u/I2VkaXRvciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICByaWdodDogMDtcclxufVxyXG5cclxuIiwi77u/I3Byb2plY3ROYW1lIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuI3Rhc2tOYW1lIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgZm9udC1zaXplOiBsYXJnZTtcclxufVxyXG5cclxuI2Jlc3RTdWIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuLnNtYWxsIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblxyXG4gICAgLmxlZnQge1xyXG4gICAgICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgfVxyXG5cclxuICAgIC5yaWdodCB7XHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgfVxyXG59XHJcblxyXG4jdGVzdHMge1xyXG4gICAgLnRlc3Qge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgICAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIGgzLFxyXG4gICAgLnJlbW92ZS10ZXN0IHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB9XHJcbn1cclxuXHJcbiN0YXNrRmlsZXMge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIG1pbi1oZWlnaHQ6IDIzMXB4O1xyXG59XHJcblxyXG4udXBsb2FkLWFyZWEge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWluLWhlaWdodDogMzI1cHg7XHJcbiAgICBtYXgtaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgYSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICBpIHtcclxuICAgICAgICB0cmFuc2l0aW9uOiAwLjJzIGVhc2UgYWxsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgJjpiZWZvcmUge1xyXG4gICAgICAgIC8qY29udGVudDogXCJcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAxMHB4O1xyXG4gICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIGJvdHRvbTogMTBweDtcclxuICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogMnB4IGRhc2hlZCAjYmJiO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsqL1xyXG4gICAgfVxyXG5cclxuICAgIC5kei1tZXNzYWdlIHtcclxuICAgICAgICBoZWlnaHQ6IDgwcHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIG1hcmdpbjogNjBweCAwO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgbGVmdDogMDtcclxuXHJcbiAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcblxyXG4gICAgICAgICAgICBpIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiA2MHB4O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZHotcHJldmlldyB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuXHJcbiAgICAgICAgLmR6LXN1Y2Nlc3MtbWFyayBzdmcgZyB7XHJcbiAgICAgICAgICAgIGZpbGw6IGdyZWVuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmR6LWVycm9yLW1hcmsgc3ZnIGcge1xyXG4gICAgICAgICAgICBmaWxsOiByZWQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZHotZXJyb3ItbWVzc2FnZSBwIHtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIvKlxyXG4gKiBUaGUgTUlUIExpY2Vuc2VcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIE1hdGlhcyBNZW5vIDxtQHRpYXMubWU+XHJcbiAqL1xyXG5cclxuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZlxyXG4vLyB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluXHJcbi8vIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG9cclxuLy8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXNcclxuLy8gb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvXHJcbi8vIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcclxuXHJcbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxyXG4vLyBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxyXG5cclxuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxyXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcclxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXHJcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcclxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcclxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEVcclxuLy8gU09GVFdBUkUuXHJcblxyXG4uY29kZXJEcm9wem9uZSwgLmNvZGVyRHJvcHpvbmUgKiB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG4uY29kZXJEcm9wem9uZSB7XHJcblxyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHJcbiAgLmR6LXByZXZpZXcge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDEyMHB4O1xyXG4gICAgbWFyZ2luOiAwLjVlbTtcclxuXHJcbiAgICAuZHotcHJvZ3Jlc3Mge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgaGVpZ2h0OiAxNXB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjYWFhO1xyXG4gICAgICAuZHotdXBsb2FkIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDA7XHJcbiAgICAgICAgYmFja2dyb3VuZDogZ3JlZW47XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZHotZXJyb3ItbWVzc2FnZSB7XHJcbiAgICAgIGNvbG9yOiByZWQ7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAmLmR6LWVycm9yIHtcclxuICAgICAgLmR6LWVycm9yLW1lc3NhZ2UsIC5kei1lcnJvci1tYXJrIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi5kei1zdWNjZXNzIHtcclxuICAgICAgLmR6LXN1Y2Nlc3MtbWFyayB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZHotZXJyb3ItbWFyaywgLmR6LXN1Y2Nlc3MtbWFyayB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgbGVmdDogMzBweDtcclxuICAgICAgdG9wOiAzMHB4O1xyXG4gICAgICB3aWR0aDogNTRweDtcclxuICAgICAgaGVpZ2h0OiA1OHB4O1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAtKDU0cHgvMik7XHJcbiAgICB9XHJcblxyXG5cclxuICB9XHJcblxyXG59IiwiLypcclxuICogVGhlIE1JVCBMaWNlbnNlXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiBNYXRpYXMgTWVubyA8bUB0aWFzLm1lPlxyXG4gKi9cclxuXHJcbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHkgb2ZcclxuLy8gdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpblxyXG4vLyB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvXHJcbi8vIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzXHJcbi8vIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkb1xyXG4vLyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XHJcblxyXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGxcclxuLy8gY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cclxuXHJcbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1JcclxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXHJcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxyXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXHJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXHJcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXHJcbi8vIFNPRlRXQVJFLlxyXG5cclxuQG1peGluIGtleWZyYW1lcygkbmFtZSkge1xyXG4gIEAtd2Via2l0LWtleWZyYW1lcyAjeyRuYW1lfSB7XHJcbiAgICBAY29udGVudDsgXHJcbiAgfVxyXG4gIEAtbW96LWtleWZyYW1lcyAjeyRuYW1lfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbiAgQGtleWZyYW1lcyAjeyRuYW1lfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9IFxyXG59XHJcblxyXG5cclxuQG1peGluIHByZWZpeCgkbWFwLCAkdmVuZG9yczogd2Via2l0IG1veiBtcyBvKSB7XHJcbiAgQGVhY2ggJHByb3AsICR2YWx1ZSBpbiAkbWFwIHtcclxuICAgIEBpZiAkdmVuZG9ycyB7XHJcbiAgICAgIEBlYWNoICR2ZW5kb3IgaW4gJHZlbmRvcnMge1xyXG4gICAgICAgICN7XCItXCIgKyAkdmVuZG9yICsgXCItXCIgKyAkcHJvcH06ICN7JHZhbHVlfTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gRHVtcCByZWd1bGFyIHByb3BlcnR5IGFueXdheVxyXG4gICAgI3skcHJvcH06ICN7JHZhbHVlfTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5AaW5jbHVkZSBrZXlmcmFtZXMocGFzc2luZy10aHJvdWdoKSB7XHJcbiAgXHJcbiAgMCUge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpKSk7XHJcbiAgfVxyXG5cclxuICAzMCUsIDcwJSB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gICAgQGluY2x1ZGUgcHJlZml4KCh0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KSkpO1xyXG4gIH1cclxuXHJcbiAgMTAwJSB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgQGluY2x1ZGUgcHJlZml4KCh0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpKSk7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQGluY2x1ZGUga2V5ZnJhbWVzKHNsaWRlLWluKSB7XHJcbiAgXHJcbiAgMCUge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpKSk7XHJcbiAgfVxyXG5cclxuICAzMCUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCkpKTtcclxuICB9XHJcbn1cclxuXHJcblxyXG5cclxuQGluY2x1ZGUga2V5ZnJhbWVzKHB1bHNlKSB7XHJcbiAgXHJcbiAgMCUgeyBAaW5jbHVkZSBwcmVmaXgoKHRyYW5zZm9ybTogc2NhbGUoMSkpKTsgfVxyXG4gIDEwJSB7IEBpbmNsdWRlIHByZWZpeCgodHJhbnNmb3JtOiBzY2FsZSgxLjEpKSk7IH1cclxuICAyMCUgeyBAaW5jbHVkZSBwcmVmaXgoKHRyYW5zZm9ybTogc2NhbGUoMSkpKTsgfVxyXG5cclxufVxyXG5cclxuXHJcblxyXG4uY29kZXJEcm9wem9uZSwgLmNvZGVyRHJvcHpvbmUgKiB7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG4uY29kZXJEcm9wem9uZSB7XHJcblxyXG4gICRpbWFnZS1zaXplOiAxMjBweDtcclxuXHJcbiAgJGltYWdlLWJvcmRlci1yYWRpdXM6IDIwcHg7XHJcblxyXG4gICYuZHotY2xpY2thYmxlIHtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAqIHtcclxuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgfVxyXG4gICAgLmR6LW1lc3NhZ2Uge1xyXG4gICAgICAmLCAqIHtcclxuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIG1pbi1oZWlnaHQ6IDE1MHB4O1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBwYWRkaW5nOiAyMHB4IDIwcHg7XHJcblxyXG4gICYuZHotc3RhcnRlZCB7XHJcbiAgICAuZHotbWVzc2FnZSB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmR6LWRyYWctaG92ZXIge1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIC5kei1tZXNzYWdlIHtcclxuICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgfVxyXG4gIH1cclxuICAuZHotbWVzc2FnZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW46IDJlbSAwO1xyXG5cclxuXHJcbiAgfVxyXG5cclxuXHJcblxyXG4gIC5kei1wcmV2aWV3IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG5cclxuICAgIG1hcmdpbjogMTZweDtcclxuICAgIG1pbi1oZWlnaHQ6IDEwMHB4O1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICAvLyBNYWtpbmcgc3VyZSB0aGF0IGFsd2F5cyB0aGUgaG92ZXJlZCBwcmV2aWV3IGVsZW1lbnQgaXMgb24gdG9wXHJcbiAgICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICAgIC5kei1kZXRhaWxzIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5kei1maWxlLXByZXZpZXcge1xyXG5cclxuICAgICAgLmR6LWltYWdlIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAkaW1hZ2UtYm9yZGVyLXJhZGl1cztcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjOTk5O1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNlZWUsICNkZGQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAuZHotZGV0YWlscyB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuZHotaW1hZ2UtcHJldmlldyB7XHJcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAuZHotZGV0YWlscyB7XHJcbiAgICAgICAgQGluY2x1ZGUgcHJlZml4KCh0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuZHotcmVtb3ZlIHtcclxuICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIC5kei1kZXRhaWxzIHtcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICAgIC5kei1kZXRhaWxzIHtcclxuICAgICAgJGJhY2tncm91bmQtY29sb3I6ICM0NDQ7XHJcblxyXG4gICAgICB6LWluZGV4OiAyMDtcclxuXHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG5cclxuICAgICAgb3BhY2l0eTogMDtcclxuXHJcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgbWluLXdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgIHBhZGRpbmc6IDJlbSAxZW07XHJcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC45KTtcclxuXHJcbiAgICAgICR3aWR0aDogMTIwcHg7XHJcblxyXG4gICAgICBsaW5lLWhlaWdodDogMTUwJTtcclxuXHJcbiAgICAgIC5kei1zaXplIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICB9XHJcblxyXG4gICAgICAuZHotZmlsZW5hbWUge1xyXG5cclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgIHNwYW4ge1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDIwMCwgMjAwLCAyMDAsIDAuOCk7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJjpub3QoOmhvdmVyKSB7XHJcbiAgICAgICAgICBzcGFuIHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgfVxyXG5cclxuICAgICAgLmR6LWZpbGVuYW1lLCAuZHotc2l6ZSB7XHJcbiAgICAgICAgc3BhbiB7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XHJcbiAgICAgICAgICBwYWRkaW5nOiAwIDAuNGVtO1xyXG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgLmR6LWltYWdlIHtcclxuICAgICAgICAvLyBvcGFjaXR5OiAwLjg7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNmb3JtOiBzY2FsZSgxLjA1LCAxLjA1KSkpOyAvLyBHZXR0aW5nIHJpZCBvZiB0aGF0IHdoaXRlIGJsZWVkLWluXHJcbiAgICAgICAgICBAaW5jbHVkZSBwcmVmaXgoKGZpbHRlcjogYmx1cig4cHgpKSwgd2Via2l0KTsgLy8gR2V0dGluZyByaWQgb2YgdGhhdCB3aGl0ZSBibGVlZC1pblxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgLmR6LWltYWdlIHtcclxuICAgICAgYm9yZGVyLXJhZGl1czogJGltYWdlLWJvcmRlci1yYWRpdXM7XHJcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgIHdpZHRoOiAkaW1hZ2Utc2l6ZTtcclxuICAgICAgaGVpZ2h0OiAkaW1hZ2Utc2l6ZTtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgei1pbmRleDogMTA7XHJcblxyXG4gICAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgICYuZHotc3VjY2VzcyB7XHJcbiAgICAgIC5kei1zdWNjZXNzLW1hcmsge1xyXG4gICAgICAgIEBpbmNsdWRlIHByZWZpeCgoYW5pbWF0aW9uOiBwYXNzaW5nLXRocm91Z2ggM3MgY3ViaWMtYmV6aWVyKDAuNzcwLCAwLjAwMCwgMC4xNzUsIDEuMDAwKSkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAmLmR6LWVycm9yIHtcclxuICAgICAgLmR6LWVycm9yLW1hcmsge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgQGluY2x1ZGUgcHJlZml4KChhbmltYXRpb246IHNsaWRlLWluIDNzIGN1YmljLWJlemllcigwLjc3MCwgMC4wMDAsIDAuMTc1LCAxLjAwMCkpKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuZHotc3VjY2Vzcy1tYXJrLCAuZHotZXJyb3ItbWFyayB7XHJcblxyXG4gICAgICAkaW1hZ2UtaGVpZ2h0OiA1NHB4O1xyXG4gICAgICAkaW1hZ2Utd2lkdGg6IDU0cHg7XHJcblxyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuXHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgIHotaW5kZXg6IDUwMDtcclxuXHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAtKCRpbWFnZS13aWR0aC8yKTtcclxuICAgICAgbWFyZ2luLXRvcDogLSgkaW1hZ2UtaGVpZ2h0LzIpO1xyXG5cclxuICAgICAgc3ZnIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogJGltYWdlLXdpZHRoO1xyXG4gICAgICAgIGhlaWdodDogJGltYWdlLWhlaWdodDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAgIFxyXG4gICAgJi5kei1wcm9jZXNzaW5nIC5kei1wcm9ncmVzcyB7XHJcbiAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyKSk7XHJcbiAgICB9XHJcbiAgICAmLmR6LWNvbXBsZXRlIC5kei1wcm9ncmVzcyB7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW4pKTtcclxuICAgIH1cclxuXHJcbiAgICAmOm5vdCguZHotcHJvY2Vzc2luZykge1xyXG4gICAgICAuZHotcHJvZ3Jlc3Mge1xyXG4gICAgICAgIEBpbmNsdWRlIHByZWZpeCgoYW5pbWF0aW9uOiBwdWxzZSA2cyBlYXNlIGluZmluaXRlKSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC5kei1wcm9ncmVzcyB7XHJcblxyXG4gICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICB6LWluZGV4OiAxMDAwO1xyXG5cclxuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgaGVpZ2h0OiAxNnB4O1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIHRvcDogNTAlO1xyXG4gICAgICBtYXJnaW4tdG9wOiAtOHB4O1xyXG5cclxuICAgICAgd2lkdGg6IDgwcHg7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAtNDBweDtcclxuXHJcbiAgICAgIC8vIGJvcmRlcjogMnB4IHNvbGlkICMzMzM7XHJcbiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcclxuXHJcbiAgICAgIC8vIEZpeCBmb3IgY2hyb21lIGJ1ZzogaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTE1NzIxOFxyXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XHJcblxyXG5cclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG5cclxuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAgIC5kei11cGxvYWQge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICMzMzM7XHJcbiAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzY2NiwgIzQ0NCk7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICBAaW5jbHVkZSBwcmVmaXgoKHRyYW5zaXRpb246IHdpZHRoIDMwMG1zIGVhc2UtaW4tb3V0KSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgJi5kei1lcnJvciB7XHJcbiAgICAgIC5kei1lcnJvci1tZXNzYWdlIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgfVxyXG4gICAgICAmOmhvdmVyIC5kei1lcnJvci1tZXNzYWdlIHtcclxuICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmR6LWVycm9yLW1lc3NhZ2Uge1xyXG4gICAgICAkd2lkdGg6ICRpbWFnZS1zaXplICsgMjBweDtcclxuICAgICAgJGNvbG9yOiByZ2IoMTkwLCAzOCwgMzgpO1xyXG5cclxuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgIEBpbmNsdWRlIHByZWZpeCgodHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2UpKTtcclxuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgIHRvcDogJGltYWdlLXNpemUgKyAxMHB4O1xyXG4gICAgICBsZWZ0OiAtMTBweDtcclxuICAgICAgd2lkdGg6ICR3aWR0aDtcclxuICAgICAgYmFja2dyb3VuZDogJGNvbG9yO1xyXG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAkY29sb3IsIGRhcmtlbigkY29sb3IsIDUlKSk7XHJcbiAgICAgIHBhZGRpbmc6IDAuNWVtIDEuMmVtO1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcblxyXG4gICAgICAvLyBUaGUgdHJpYW5nbGUgcG9pbnRpbmcgdXBcclxuICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogLTZweDtcclxuICAgICAgICBsZWZ0OiAkd2lkdGggLyAyIC0gNnB4O1xyXG4gICAgICAgIHdpZHRoOiAwOyBcclxuICAgICAgICBoZWlnaHQ6IDA7IFxyXG4gICAgICAgIGJvcmRlci1sZWZ0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogNnB4IHNvbGlkICRjb2xvcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICB9XHJcbn1cclxuXHJcblxyXG4iLCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Um9ib3RvOjQwMCwzMDAsMzAwaXRhbGljLDQwMGl0YWxpYyw1MDAsNTAwaXRhbGljLDcwMCw3MDBpdGFsaWMpO1xuQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMCwzMDAsMzAwaXRhbGljLDQwMGl0YWxpYyw3MDBpdGFsaWMpO1xuaHRtbCB7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuYm9keSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMTAwJTtcbiAgcGFkZGluZy10b3A6IDUwcHg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuI21haW4ge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBmbGV4OiAxO1xufVxuXG4vKiBTZXQgcGFkZGluZyB0byBrZWVwIGNvbnRlbnQgZnJvbSBoaXR0aW5nIHRoZSBlZGdlcyAqL1xuLmJvZHktY29udGVudCB7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbn1cblxuLyogT3ZlcnJpZGUgdGhlIGRlZmF1bHQgYm9vdHN0cmFwIGJlaGF2aW9yIHdoZXJlIGhvcml6b250YWwgZGVzY3JpcHRpb24gbGlzdHMgXHJcbiAgIHdpbGwgdHJ1bmNhdGUgdGVybXMgdGhhdCBhcmUgdG9vIGxvbmcgdG8gZml0IGluIHRoZSBsZWZ0IGNvbHVtbiBcclxuKi9cbi5kbC1ob3Jpem9udGFsIGR0IHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxuYSB7XG4gIGNvbG9yOiAjMzQ5OGRiO1xufVxuXG5hIDpob3ZlciB7XG4gIGNvbG9yOiAjMzQ0OTVlO1xufVxuXG5ociB7XG4gIGhlaWdodDogMTJweDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcbn1cblxuI2hlYWRlciB7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJhY2tncm91bmQ6ICMzNDQ5NWU7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgY29sb3I6ICNmZmY7XG4gIGhlaWdodDogNjBweDtcbn1cblxuI2hlYWRlciAubmF2IGEge1xuICBjb2xvcjogI2ZmZjtcbiAgdHJhbnNpdGlvbjogLjRzIGVhc2UgYWxsO1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgaGVpZ2h0OiA2MHB4O1xufVxuXG4jaGVhZGVyIC5uYXYgYTpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGNvbG9yOiAjZTY3ZTIyO1xufVxuXG4jaGVhZGVyIC5uYXZiYXItaGVhZGVyOmhvdmVyICNoZWFkTG9nbyBzdmcgcGF0aCB7XG4gIGZpbGw6ICNlNjdlMjI7XG59XG5cbiNoZWFkZXIgLm5hdmJhci1oZWFkZXI6aG92ZXIgLm5hdmJhci1icmFuZC5sb2dvVGl0bGUge1xuICBjb2xvcjogI2U2N2UyMjtcbn1cblxuI2hlYWRlciAubmF2YmFyLWJyYW5kLmxvZ29UaXRsZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgdHJhbnNpdGlvbjogLjRzIGVhc2UgYWxsO1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgaGVpZ2h0OiA2MHB4O1xufVxuXG4jaGVhZExvZ28ge1xuICBmbG9hdDogbGVmdDtcbiAgcGFkZGluZzogMTJweCAxNXB4IDVweCAwO1xuICBoZWlnaHQ6IDYwcHg7XG59XG5cbiNoZWFkTG9nbyBzdmcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDM1cHg7XG59XG5cbiNoZWFkTG9nbyBzdmcgcGF0aCB7XG4gIHRyYW5zaXRpb246IC40cyBlYXNlIGFsbDtcbn1cblxuLnByb2plY3RzIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLmFsbE9mSXQge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuXG4ucHJvamVjdEJveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLWhlaWdodDogMjIwcHg7XG4gIG1pbi13aWR0aDogMjI1cHg7XG4gIGJvcmRlcjogc29saWQ7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXI6IDVweCBzb2xpZCB3aGl0ZTtcbiAgY29sb3I6IHJnYmEoNTIsIDczLCA5NCwgMC44NSk7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45NSk7XG59XG5cbi5wcm9qZWN0Qm94OmhvdmVyIHtcbiAgYm94LXNoYWRvdzogMXB4IDFweCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG59XG5cbi5wcm9qZWN0Qm94IC5uYW1lIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBtYXJnaW4tYm90dG9tOiAxcHg7XG59XG5cbi5wcm9qZWN0Qm94IC5jb3Vyc2Uge1xuICBmb250LXN0eWxlOiBvYmxpcXVlO1xufVxuXG4ucHJvamVjdEJveCAudmFsdWUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDEwcHggMCA1cHggMDtcbn1cblxuLnByb2plY3RCb3ggLmRhdGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBmb250LXNpemU6IDEwcHg7XG59XG5cbi5wcm9qZWN0Qm94IC5kYXRlIC5zdGFydCB7XG4gIHdpZHRoOiA1MCU7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5wcm9qZWN0Qm94IC5kYXRlIC5lbmQge1xuICB3aWR0aDogNTAlO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuLnByb2plY3RCb3guZmx1aWQge1xuICBtYXgtaGVpZ2h0OiBub25lO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4jcHJvVGV4dCB7XG4gIGNvbG9yOiAjMzQ0OTVlO1xufVxuXG4ucHJvQ29udGFpbmVyIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG5jYXB0aW9uIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4ucmVtYWluaW5nIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDtcbn1cblxuLnNpZGVUYWJsZSB7XG4gIGJvcmRlcjogc29saWQ7XG4gIGJvcmRlcjogM3B4IHNvbGlkIHdoaXRlO1xuICBwYWRkaW5nLXRvcDogLTEwMHB4O1xufVxuXG4uc2lkZVRhYmxlIH4gLnNpZGVUYWJsZSB7XG4gIG1hcmdpbi10b3A6IDIyLjVweDtcbn1cblxuLm9sZEJveCB7XG4gIG9wYWNpdHk6IC41O1xufVxuXG4ub2xkQm94OmhvdmVyIHtcbiAgb3BhY2l0eTogMC45ICFpbXBvcnRhbnQ7XG59XG5cbi5vbGRCb3g6aG92ZXIgI2VuZERhdGUge1xuICBvcGFjaXR5OiAwLjggIWltcG9ydGFudDtcbn1cblxuLm9sZEJveCAjZW5kRGF0ZSB7XG4gIG9wYWNpdHk6IC4zNTtcbiAgY29sb3I6IHJlZDtcbn1cblxuI2VuZERhdGUge1xuICBwYWRkaW5nLXRvcDogMTVweDtcbiAgZm9udC1zaXplOiAxNXB4O1xufVxuXG4uYWxsQ291cnNlcyB7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5jb3Vyc2UtZGV0YWlscyB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jb3Vyc2UtYm94IHtcbiAgY2xlYXI6IGxlZnQ7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jb3Vyc2UtYm94IGgzIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmNvdXJzZS1ib3ggLmNvZGVyLXRhYmxlIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cblxuLmNvZGVyLXRhYmxlIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMzNDQ5NWU7XG4gIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7XG59XG5cbi5jb2Rlci10YWJsZSB0aGVhZCA+IHRyIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMzNDQ5NWU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDQ5NWU7XG59XG5cbi5jb2Rlci10YWJsZSB0aGVhZCA+IHRyIHRoIHtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgcGFkZGluZzogMjBweCAxNXB4O1xuICBjb2xvcjogI2Y5ZjlmOTtcbn1cblxuLmNvZGVyLXRhYmxlIHRoZWFkID4gdHIgdGg6bGFzdC1jaGlsZCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uY29kZXItdGFibGUgdHIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBnaG9zdHdoaXRlO1xufVxuXG4uY29kZXItdGFibGUgdHIgdGQge1xuICBwYWRkaW5nOiAxNXB4IDA7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbn1cblxuLmNvZGVyLXRhYmxlIHRyIHRkOm5vdCg6bGFzdC1jaGlsZCkgYSB7XG4gIGNvbG9yOiAjMzMzO1xufVxuXG4uY29kZXItdGFibGUgdHIgdGQ6bm90KDpsYXN0LWNoaWxkKSBhOmhvdmVyIHtcbiAgY29sb3I6ICNlNjdlMjI7XG59XG5cbi5jb2Rlci10YWJsZSB0ciB0ZDpsYXN0LWNoaWxkIHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG59XG5cbi5jb2Rlci10YWJsZSB0cjpudGgtY2hpbGQoMm4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuI2Zvb3RlciB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kOiAjMzQ0OTVlO1xufVxuXG4jZm9vdGVyIC5jb250YWluZXIge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG4gIGJhY2tncm91bmQtY29sb3I6IGdob3N0d2hpdGU7XG59XG5cbmEge1xuICBjb2xvcjogI2U2N2UyMjtcbiAgdHJhbnNpdGlvbjogLjRzIGVhc2UgYWxsO1xufVxuXG5hOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogIzY0MzUwYjtcbn1cblxuYTpmb2N1cyB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaDEgYSxcbmgyIGEsXG5oMyBhLFxuaDQgYSxcbmg1IGEsXG5oNiBhIHtcbiAgY29sb3I6ICMzMzM7XG59XG5cbmgxIGE6aG92ZXIsXG5oMiBhOmhvdmVyLFxuaDMgYTpob3Zlcixcbmg0IGE6aG92ZXIsXG5oNSBhOmhvdmVyLFxuaDYgYTpob3ZlciB7XG4gIGNvbG9yOiAjZTY3ZTIyO1xufVxuXG5oMSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZy10b3A6IDEwcHg7XG59XG5cbmgyIHtcbiAgZm9udC1zaXplOiAyNHB4O1xufVxuXG5zcGFuLnRleHQtdmFsdWUsIHNwYW4udGV4dC1jYXB0aW9uIHtcbiAgcGFkZGluZzogMTBweCAwO1xufVxuXG5zcGFuLnRleHQtY2FwdGlvbiB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5icmVhZGNydW1icyBhIHtcbiAgY29sb3I6ICMzMzM7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59XG5cbi5kZXRhaWxzLWJveCB7XG4gIG1hcmdpbjogMTBweCAwO1xufVxuXG4uZGV0YWlscy1ib3ggLmRlc2NyaXB0aW9uIHtcbiAgbWFyZ2luLXRvcDogMzBweDtcbn1cblxuLmVkaXRCdXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG5pLmZhIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBtYXJnaW46IDAgMjBweDtcbn1cblxuYm9keS5sb2dpbiB7XG4gIGJhY2tncm91bmQ6ICMzNDQ5NWU7XG59XG5cbi5sb2dpbkNlbnRlciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAxMHB4O1xuICBtYXgtd2lkdGg6IDQwMHB4O1xufVxuXG4ubG9naW5DZW50ZXIgaDEge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5sb2dpbkNlbnRlciAubG9nbyBzdmcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDIwMHB4O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4ubG9naW5DZW50ZXIgI2xvZ2luRm9ybSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubG9naW5DZW50ZXIgLmJ0biB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4jbG9naW5Gb3JtIHtcbiAgcGFkZGluZzogMXB4IDEwcHggMXB4IDEwcHg7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogbWVkaXVtO1xuICBib3JkZXItY29sb3I6ICMzNDQ5NWU7XG59XG5cbiN1c2VyRGV0YWlsc1JpZ2h0U2lkZSB7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cblxuZGQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIHRleHQtYWxpZ24tbGFzdDogbGVmdDtcbn1cblxuI2VkaXRvciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbn1cblxuI3Byb2plY3ROYW1lIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGZsb2F0OiBsZWZ0O1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuI3Rhc2tOYW1lIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogbGFyZ2U7XG59XG5cbiNiZXN0U3ViIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGZsb2F0OiByaWdodDtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG5cbi5zbWFsbCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnNtYWxsIC5sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQ7XG59XG5cbi5zbWFsbCAucmlnaHQge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbiN0ZXN0cyAudGVzdCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIHBhZGRpbmc6IDMwcHg7XG59XG5cbiN0ZXN0cyBoMyxcbiN0ZXN0cyAucmVtb3ZlLXRlc3Qge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbiN0YXNrRmlsZXMge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtaW4taGVpZ2h0OiAyMzFweDtcbn1cblxuLnVwbG9hZC1hcmVhIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1pbi1oZWlnaHQ6IDMyNXB4O1xuICBtYXgtaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG59XG5cbi51cGxvYWQtYXJlYSBhIHtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLnVwbG9hZC1hcmVhIGkge1xuICB0cmFuc2l0aW9uOiAwLjJzIGVhc2UgYWxsO1xufVxuXG4udXBsb2FkLWFyZWE6aG92ZXIgaSB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHggIWltcG9ydGFudDtcbn1cblxuLnVwbG9hZC1hcmVhOmJlZm9yZSB7XG4gIC8qY29udGVudDogXCJcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAxMHB4O1xyXG4gICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIGJvdHRvbTogMTBweDtcclxuICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgIGJvcmRlcjogMnB4IGRhc2hlZCAjYmJiO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsqL1xufVxuXG4udXBsb2FkLWFyZWEgLmR6LW1lc3NhZ2Uge1xuICBoZWlnaHQ6IDgwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiA2MHB4IDA7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbn1cblxuLnVwbG9hZC1hcmVhIC5kei1tZXNzYWdlIHNwYW4ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4udXBsb2FkLWFyZWEgLmR6LW1lc3NhZ2Ugc3BhbiBpIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogNjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLnVwbG9hZC1hcmVhIC5kei1wcmV2aWV3IHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuLnVwbG9hZC1hcmVhIC5kei1wcmV2aWV3IC5kei1zdWNjZXNzLW1hcmsgc3ZnIGcge1xuICBmaWxsOiBncmVlbjtcbn1cblxuLnVwbG9hZC1hcmVhIC5kei1wcmV2aWV3IC5kei1lcnJvci1tYXJrIHN2ZyBnIHtcbiAgZmlsbDogcmVkO1xufVxuXG4udXBsb2FkLWFyZWEgLmR6LXByZXZpZXcgLmR6LWVycm9yLW1lc3NhZ2UgcCB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG59XG5cbi8qXHJcbiAqIFRoZSBNSVQgTGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgTWF0aWFzIE1lbm8gPG1AdGlhcy5tZT5cclxuICovXG4uY29kZXJEcm9wem9uZSwgLmNvZGVyRHJvcHpvbmUgKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5jb2RlckRyb3B6b25lIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTIwcHg7XG4gIG1hcmdpbjogMC41ZW07XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1wcm9ncmVzcyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDE1cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNhYWE7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1wcm9ncmVzcyAuZHotdXBsb2FkIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDA7XG4gIGJhY2tncm91bmQ6IGdyZWVuO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZXJyb3ItbWVzc2FnZSB7XG4gIGNvbG9yOiByZWQ7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3LmR6LWVycm9yIC5kei1lcnJvci1tZXNzYWdlLCAuY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1lcnJvciAuZHotZXJyb3ItbWFyayB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1zdWNjZXNzIC5kei1zdWNjZXNzLW1hcmsge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWVycm9yLW1hcmssIC5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1zdWNjZXNzLW1hcmsge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGxlZnQ6IDMwcHg7XG4gIHRvcDogMzBweDtcbiAgd2lkdGg6IDU0cHg7XG4gIGhlaWdodDogNThweDtcbiAgbGVmdDogNTAlO1xuICBtYXJnaW4tbGVmdDogLTI3cHg7XG59XG5cbi8qXHJcbiAqIFRoZSBNSVQgTGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgTWF0aWFzIE1lbm8gPG1AdGlhcy5tZT5cclxuICovXG5ALXdlYmtpdC1rZXlmcmFtZXMgcGFzc2luZy10aHJvdWdoIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg0MHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICB9XG4gIDMwJSwgNzAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MHB4KTtcbiAgfVxufVxuXG5ALW1vei1rZXlmcmFtZXMgcGFzc2luZy10aHJvdWdoIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg0MHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICB9XG4gIDMwJSwgNzAlIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MHB4KTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHBhc3NpbmctdGhyb3VnaCB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg0MHB4KTtcbiAgfVxuICAzMCUsIDcwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MHB4KTtcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC00MHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDBweCk7XG4gIH1cbn1cblxuQC13ZWJraXQta2V5ZnJhbWVzIHNsaWRlLWluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg0MHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICB9XG4gIDMwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICB9XG59XG5cbkAtbW96LWtleWZyYW1lcyBzbGlkZS1pbiB7XG4gIDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSg0MHB4KTtcbiAgfVxuICAzMCUge1xuICAgIG9wYWNpdHk6IDE7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMHB4KTtcbiAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlLWluIHtcbiAgMCUge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSg0MHB4KTtcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoNDBweCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDQwcHgpO1xuICB9XG4gIDMwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDBweCk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwcHgpO1xuICB9XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxuICAxMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgfVxuICAyMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG59XG5cbkAtbW96LWtleWZyYW1lcyBwdWxzZSB7XG4gIDAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxuICAxMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgfVxuICAyMCUge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xuICB9XG59XG5cbkBrZXlmcmFtZXMgcHVsc2Uge1xuICAwJSB7XG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIH1cbiAgMTAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIH1cbiAgMjAlIHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEpO1xuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcbiAgfVxufVxuXG4uY29kZXJEcm9wem9uZSwgLmNvZGVyRHJvcHpvbmUgKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5jb2RlckRyb3B6b25lIHtcbiAgbWluLWhlaWdodDogMTUwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbn1cblxuLmNvZGVyRHJvcHpvbmUuZHotY2xpY2thYmxlIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uY29kZXJEcm9wem9uZS5kei1jbGlja2FibGUgKiB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbn1cblxuLmNvZGVyRHJvcHpvbmUuZHotY2xpY2thYmxlIC5kei1tZXNzYWdlLCAuY29kZXJEcm9wem9uZS5kei1jbGlja2FibGUgLmR6LW1lc3NhZ2UgKiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmNvZGVyRHJvcHpvbmUuZHotc3RhcnRlZCAuZHotbWVzc2FnZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jb2RlckRyb3B6b25lLmR6LWRyYWctaG92ZXIge1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xufVxuXG4uY29kZXJEcm9wem9uZS5kei1kcmFnLWhvdmVyIC5kei1tZXNzYWdlIHtcbiAgb3BhY2l0eTogMC41O1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotbWVzc2FnZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAyZW0gMDtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgbWFyZ2luOiAxNnB4O1xuICBtaW4taGVpZ2h0OiAxMDBweDtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXc6aG92ZXIge1xuICB6LWluZGV4OiAxMDAwO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldzpob3ZlciAuZHotZGV0YWlscyB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3LmR6LWZpbGUtcHJldmlldyAuZHotaW1hZ2Uge1xuICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICBiYWNrZ3JvdW5kOiAjOTk5O1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjZWVlLCAjZGRkKTtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcuZHotZmlsZS1wcmV2aWV3IC5kei1kZXRhaWxzIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcuZHotaW1hZ2UtcHJldmlldyB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1pbWFnZS1wcmV2aWV3IC5kei1kZXRhaWxzIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyO1xuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyBsaW5lYXI7XG4gIC1tcy10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyO1xuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgbGluZWFyO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotcmVtb3ZlIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LXJlbW92ZTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldzpob3ZlciAuZHotZGV0YWlscyB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1kZXRhaWxzIHtcbiAgei1pbmRleDogMjA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBvcGFjaXR5OiAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIG1pbi13aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAyZW0gMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOSk7XG4gIGxpbmUtaGVpZ2h0OiAxNTAlO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZGV0YWlscyAuZHotc2l6ZSB7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZGV0YWlscyAuZHotZmlsZW5hbWUge1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZGV0YWlscyAuZHotZmlsZW5hbWU6aG92ZXIgc3BhbiB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMjAwLCAyMDAsIDIwMCwgMC44KTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZGV0YWlscyAuZHotZmlsZW5hbWU6bm90KDpob3Zlcikge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWRldGFpbHMgLmR6LWZpbGVuYW1lOm5vdCg6aG92ZXIpIHNwYW4ge1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LWRldGFpbHMgLmR6LWZpbGVuYW1lIHNwYW4sIC5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1kZXRhaWxzIC5kei1zaXplIHNwYW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNCk7XG4gIHBhZGRpbmc6IDAgMC40ZW07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXc6aG92ZXIgLmR6LWltYWdlIGltZyB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjA1LCAxLjA1KTtcbiAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEuMDUsIDEuMDUpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZSgxLjA1LCAxLjA1KTtcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZSgxLjA1LCAxLjA1KTtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1LCAxLjA1KTtcbiAgLXdlYmtpdC1maWx0ZXI6IGJsdXIoOHB4KTtcbiAgZmlsdGVyOiBibHVyKDhweCk7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1pbWFnZSB7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAxMjBweDtcbiAgaGVpZ2h0OiAxMjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgei1pbmRleDogMTA7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1pbWFnZSBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcuZHotc3VjY2VzcyAuZHotc3VjY2Vzcy1tYXJrIHtcbiAgLXdlYmtpdC1hbmltYXRpb246IHBhc3NpbmctdGhyb3VnaCAzcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuICAtbW96LWFuaW1hdGlvbjogcGFzc2luZy10aHJvdWdoIDNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG4gIC1tcy1hbmltYXRpb246IHBhc3NpbmctdGhyb3VnaCAzcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuICAtby1hbmltYXRpb246IHBhc3NpbmctdGhyb3VnaCAzcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuICBhbmltYXRpb246IHBhc3NpbmctdGhyb3VnaCAzcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1lcnJvciAuZHotZXJyb3ItbWFyayB7XG4gIG9wYWNpdHk6IDE7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBzbGlkZS1pbiAzcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuICAtbW96LWFuaW1hdGlvbjogc2xpZGUtaW4gM3MgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcbiAgLW1zLWFuaW1hdGlvbjogc2xpZGUtaW4gM3MgY3ViaWMtYmV6aWVyKDAuNzcsIDAsIDAuMTc1LCAxKTtcbiAgLW8tYW5pbWF0aW9uOiBzbGlkZS1pbiAzcyBjdWJpYy1iZXppZXIoMC43NywgMCwgMC4xNzUsIDEpO1xuICBhbmltYXRpb246IHNsaWRlLWluIDNzIGN1YmljLWJlemllcigwLjc3LCAwLCAwLjE3NSwgMSk7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1zdWNjZXNzLW1hcmssIC5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1lcnJvci1tYXJrIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIHotaW5kZXg6IDUwMDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgbWFyZ2luLWxlZnQ6IC0yN3B4O1xuICBtYXJnaW4tdG9wOiAtMjdweDtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LXN1Y2Nlc3MtbWFyayBzdmcsIC5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1lcnJvci1tYXJrIHN2ZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogNTRweDtcbiAgaGVpZ2h0OiA1NHB4O1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1wcm9jZXNzaW5nIC5kei1wcm9ncmVzcyB7XG4gIG9wYWNpdHk6IDE7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcbiAgLW1zLXRyYW5zaXRpb246IGFsbCAwLjJzIGxpbmVhcjtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBsaW5lYXI7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3LmR6LWNvbXBsZXRlIC5kei1wcm9ncmVzcyB7XG4gIG9wYWNpdHk6IDA7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW47XG4gIC1tb3otdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW47XG4gIC1tcy10cmFuc2l0aW9uOiBvcGFjaXR5IDAuNHMgZWFzZS1pbjtcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjRzIGVhc2UtaW47XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC40cyBlYXNlLWluO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldzpub3QoLmR6LXByb2Nlc3NpbmcpIC5kei1wcm9ncmVzcyB7XG4gIC13ZWJraXQtYW5pbWF0aW9uOiBwdWxzZSA2cyBlYXNlIGluZmluaXRlO1xuICAtbW96LWFuaW1hdGlvbjogcHVsc2UgNnMgZWFzZSBpbmZpbml0ZTtcbiAgLW1zLWFuaW1hdGlvbjogcHVsc2UgNnMgZWFzZSBpbmZpbml0ZTtcbiAgLW8tYW5pbWF0aW9uOiBwdWxzZSA2cyBlYXNlIGluZmluaXRlO1xuICBhbmltYXRpb246IHB1bHNlIDZzIGVhc2UgaW5maW5pdGU7XG59XG5cbi5jb2RlckRyb3B6b25lIC5kei1wcmV2aWV3IC5kei1wcm9ncmVzcyB7XG4gIG9wYWNpdHk6IDE7XG4gIHotaW5kZXg6IDEwMDA7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGhlaWdodDogMTZweDtcbiAgbGVmdDogNTAlO1xuICB0b3A6IDUwJTtcbiAgbWFyZ2luLXRvcDogLThweDtcbiAgd2lkdGg6IDgwcHg7XG4gIG1hcmdpbi1sZWZ0OiAtNDBweDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmNvZGVyRHJvcHpvbmUgLmR6LXByZXZpZXcgLmR6LXByb2dyZXNzIC5kei11cGxvYWQge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAjNjY2LCAjNDQ0KTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDA7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzAwbXMgZWFzZS1pbi1vdXQ7XG4gIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzAwbXMgZWFzZS1pbi1vdXQ7XG4gIC1tcy10cmFuc2l0aW9uOiB3aWR0aCAzMDBtcyBlYXNlLWluLW91dDtcbiAgLW8tdHJhbnNpdGlvbjogd2lkdGggMzAwbXMgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zaXRpb246IHdpZHRoIDMwMG1zIGVhc2UtaW4tb3V0O1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1lcnJvciAuZHotZXJyb3ItbWVzc2FnZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldy5kei1lcnJvcjpob3ZlciAuZHotZXJyb3ItbWVzc2FnZSB7XG4gIG9wYWNpdHk6IDE7XG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZXJyb3ItbWVzc2FnZSB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB6LWluZGV4OiAxMDAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBkaXNwbGF5OiBub25lO1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICAtbXMtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuM3MgZWFzZTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBmb250LXNpemU6IDEzcHg7XG4gIHRvcDogMTMwcHg7XG4gIGxlZnQ6IC0xMHB4O1xuICB3aWR0aDogMTQwcHg7XG4gIGJhY2tncm91bmQ6ICNiZTI2MjY7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNiZTI2MjYsICNhOTIyMjIpO1xuICBwYWRkaW5nOiAwLjVlbSAxLjJlbTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uY29kZXJEcm9wem9uZSAuZHotcHJldmlldyAuZHotZXJyb3ItbWVzc2FnZTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTZweDtcbiAgbGVmdDogNjRweDtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgYm9yZGVyLWxlZnQ6IDZweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJpZ2h0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1ib3R0b206IDZweCBzb2xpZCAjYmUyNjI2O1xufVxuXG4uaHR0cC1lcnJvci1ib3gge1xuICBtYXJnaW4tdG9wOiA4MHB4O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbn1cblxuLmh0dHAtZXJyb3ItYm94IC5jb250YWluZXIge1xuICBwYWRkaW5nOiAxMjBweDtcbn1cblxuLmh0dHAtZXJyb3ItYm94IGgxIHtcbiAgZm9udC1zaXplOiAxNDBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICNlNjdlMjI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5odHRwLWVycm9yLWJveCBoMiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICMzNDQ5NWU7XG4gIGZvbnQtc2l6ZTogNjBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgbWFyZ2luLXRvcDogMjBweDtcbn1cblxuLmh0dHAtZXJyb3ItYm94IC5lcnJvci1idXR0b25zIHtcbiAgcGFkZGluZzogNDBweDtcbiAgbWFyZ2luLXRvcDogODBweDtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5odHRwLWVycm9yLWJveCAuZXJyb3ItYnV0dG9ucyAuZXJyb3ItYnV0dG9uIHtcbiAgcGFkZGluZzogMjBweCA0MHB4O1xuICBiYWNrZ3JvdW5kOiAjMzQ0OTVlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi5odHRwLWVycm9yLWJveCAuZXJyb3ItYnV0dG9ucyAuZXJyb3ItYnV0dG9uOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iLCLvu78uaHR0cC1lcnJvci1ib3gge1xyXG4gICAgbWFyZ2luLXRvcDogODBweDtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG5cclxuICAgIC5jb250YWluZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDEyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIGgxIHtcclxuICAgICAgICBmb250LXNpemU6IDE0MHB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci1hY3Rpb247XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcblxyXG4gICAgaDIge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBjb2xvcjogJGNvbG9yLWZpcnN0O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogNjBweDtcclxuICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmVycm9yLWJ1dHRvbnMge1xyXG4gICAgICAgIHBhZGRpbmc6IDQwcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogODBweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICAgICAuZXJyb3ItYnV0dG9uIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweCA0MHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3ItZmlyc3Q7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHJcbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
