@charset "UTF-8";
/*#editor {
    position: relative;
    display: block;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
}

.diff-container {
    display: flex;
    display: -webkit-flex;
    flex-direction: row;    
    width: 100%;
    height: 100%;
    width: 100%;
}
.diff-container>div {
    flex-grow: 1;
    -webkit-flex-grow: 1;
    position: relative;
}
.diff-container > .diff-gutter {
    flex: 0 0 60px;
    -webkit-flex: 0 0 60px;
    border-left: 1px solid #999999;
    border-right: 1px solid #999999;
    background-color: #efefef;
    overflow: hidden;
}
.diff-gutter svg {
    background-color: #efefef;
}

.acediff-diff {
    background-color: #d8f2ff;
    border-top: 1px solid #a2d7f2;
    border-bottom: 1px solid #a2d7f2;
    position: absolute;
    z-index: 4;
}
.acediff-diff.targetOnly {
    height: 0px !important;
    border-top: 1px solid #a2d7f2;
    border-bottom: 0px;
    position: absolute;
}
.acediff-connector {
    fill: #d8f2ff;
    stroke: #a2d7f2;
}

.diff-editor-obtained {
    float: right;
}
.diff-editor-expected,
.diff-editor-obtained {
    position: relative;
}
.diff-editor-expected div {
    color: #000000;
    text-shadow: 1px 1px #ffffff;
    position: absolute;
    margin: -3px 2px;
    cursor: pointer;
}
.diff-editor-expected div:hover {
    color: #004ea0;
}
.diff-editor-obtained div {
    color: #000000;
    text-shadow: 1px 1px #ffffff;
    position: absolute;
    right: 0px;
    margin: -3px 2px;
    cursor: pointer;
}
.diff-editor-obtained div:hover {
    color: #c98100;
}*/
@import url(https://fonts.googleapis.com/css?family=Lato:400,700,300,300italic,400italic,700italic);
.diff-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  display: -webkit-flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  position: absolute;
  bottom: 0;
  width: 100%;
  top: 0px !important;
  left: 0px;
  /* these 3 lines are to prevents an unsightly scrolling bounce affect on Safari */
  height: 100%;
  width: 100%;
  overflow: auto;
}

.diff-container > div {
  -webkit-box-flex: 1;
      -ms-flex-positive: 1;
          flex-grow: 1;
  -webkit-flex-grow: 1;
  position: relative;
}

.diff-container > div.diff-gutter {
  -webkit-box-flex: 0;
      -ms-flex: 0 0 60px;
          flex: 0 0 60px;
  -webkit-flex: 0 0 60px;
  border-left: 1px solid #111111;
  border-right: 1px solid #111111;
  background-color: #222222;
  /* prevents the bounce on FF, mac osx */
  overflow: auto;
  height: 100%;
  width: 100%;
}

.diff-gutter svg {
  background-color: #222222;
}

.diff-editor-obtained {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
}

.diff-editor-expected {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 100%;
}

.acediff-diff {
  background-color: #004d7a;
  border-top: 1px solid #036daa;
  border-bottom: 1px solid #036daa;
  position: absolute;
  z-index: 4;
}

.acediff-diff.targetOnly {
  height: 0px !important;
  border-top: 1px solid #036daa;
  border-bottom: 0px;
  position: absolute;
}

.acediff-connector {
  fill: #004d7a;
  stroke: #003554;
}

.acediff-copy-left {
  float: right;
}

.acediff-copy-right,
.acediff-copy-left {
  position: relative;
}

.acediff-copy-right div {
  color: #ffffff;
  position: absolute;
  margin: -3px 2px;
  cursor: pointer;
}

.acediff-copy-right div:hover {
  color: #004ea0;
}

.acediff-copy-left div {
  color: #ffffff;
  position: absolute;
  right: 0px;
  margin: -3px 2px;
  cursor: pointer;
}

.acediff-copy-left div:hover {
  color: #c98100;
}

.breadcrumbs {
  padding: 10px 20px;
  background: #e0e7e8;
  margin-bottom: 40px;
  clear: left;
}

.breadcrumbs a {
  color: #333;
  font-weight: 700;
}

.breadcrumbs a:hover {
  color: #e67e22;
}

.breadcrumbs ul {
  list-style: none;
  padding-left: 0;
  margin-bottom: 0;
}

.breadcrumbs ul li {
  display: inline-block;
}

.breadcrumbs ul li:not(:last-child):after {
  content: '\f105';
  font-family: FontAwesome;
  margin: 0 5px;
}

.breadcrumbs ul li:last-child a {
  color: #999;
  font-weight: 400;
}

body {
  font-family: 'Lato', sans-serif;
  background-color: #ecf0f1;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Lato', sans-serif;
}

h1 a,
h2 a,
h3 a,
h4 a,
h5 a,
h6 a {
  color: #333;
}

h1 a:hover,
h2 a:hover,
h3 a:hover,
h4 a:hover,
h5 a:hover,
h6 a:hover {
  color: #e67e22;
}

h1 {
  float: left;
  display: inline-block;
  padding-top: 10px;
  margin: 10px 0 30px;
}

h1 + .btn {
  float: left;
  margin-left: 20px;
  margin-top: 25px;
}

h2 {
  font-size: 24px;
}

a {
  color: #e67e22;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
}

a:hover {
  text-decoration: none;
  color: #64350b;
}

a:focus {
  text-decoration: none;
}

.title-box {
  background: #fff;
  border: 1px solid #34495e;
  margin-bottom: 30px;
}

.title-box .title-box-title {
  background: #34495e;
  color: #fff;
  padding: 10px 20px;
}

.title-box .title-box-title h1,
.title-box .title-box-title h2,
.title-box .title-box-title h3,
.title-box .title-box-title h4,
.title-box .title-box-title h5,
.title-box .title-box-title h6 {
  margin: 0;
  font-weight: 300;
}

.title-box .title-box-content {
  padding: 30px 20px;
}

.whiteBox {
  position: relative;
  width: 100%;
  color: #333;
  background: #fff !important;
  padding: 30px 20px;
  margin-bottom: 30px;
  border: 1px solid #34495e;
}

.whiteBox .title, .whiteBox .sub-title {
  margin-top: 0 !important;
}

.whiteBox .title {
  font-size: 24px;
  display: inline-block;
}

.whiteBox .sub-title {
  font-size: 18px;
  display: block;
}

.contentWrap {
  position: relative;
  max-width: 1230px;
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;
}

.description-box {
  margin: 10px 0;
}

.editButton {
  display: inline-block;
  margin-left: 10px;
}

#projectTaskList,
#submissionList {
  padding: 10px;
}

.btn .fa {
  margin-right: 5px;
}

input[type="submit"] {
  float: right;
}

.btn-changeview {
  float: right !important;
  margin-top: 25px;
}

.btn-changeview + * {
  clear: left;
}

.btn-default + .btn-default {
  margin-left: 5px;
}

.allCourses {
  margin-top: 10px;
}

.course-details {
  margin-bottom: 50px;
}

#cancelCreate {
  font-size: 30px;
}

#coursesPanel .coder-panel-heading {
  border-bottom: 1px solid #34495e;
  padding: 10px;
  background-color: #34495e;
}

#coursesPanel .coder-panel-heading a {
  color: #e67e22;
}

#coursesPanel .coder-panel-heading a :hover {
  color: #fbfcfc;
}

#coursesPanel .coder-panel-heading span {
  padding-right: 5px;
}

.user-list {
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}

/*
 * Table styles
 */
table.dataTable {
  width: 100%;
  margin: 0 auto;
  clear: both;
  border-collapse: separate;
  border-spacing: 0;
  font-family: 'Lato', sans-serif !important;
  /*
     * Header and footer styles
     */
  /*
     * Body styles
     */
}

table.dataTable thead th,
table.dataTable tfoot th {
  font-weight: bold;
}

table.dataTable thead th,
table.dataTable thead td {
  padding: 10px 18px;
  border-bottom: 1px solid #34495e;
}

table.dataTable thead th:active,
table.dataTable thead td:active {
  outline: none;
}

table.dataTable tfoot th,
table.dataTable tfoot td {
  padding: 10px 18px 6px 18px;
  border-top: 1px solid #34495e;
}

table.dataTable thead .sorting,
table.dataTable thead .sorting_asc,
table.dataTable thead .sorting_desc {
  cursor: pointer;
  *cursor: hand;
}

table.dataTable thead .sorting,
table.dataTable thead .sorting_asc,
table.dataTable thead .sorting_desc,
table.dataTable thead .sorting_asc_disabled,
table.dataTable thead .sorting_desc_disabled {
  background-repeat: no-repeat;
  background-position: center right;
}

table.dataTable tbody tr {
  background-color: #ffffff;
}

table.dataTable tbody tr.selected {
  background-color: #b0bed9;
}

table.dataTable tbody th,
table.dataTable tbody td {
  padding: 8px 10px;
}

table.dataTable.row-border tbody th, table.dataTable.row-border tbody td,
table.dataTable.display tbody th,
table.dataTable.display tbody td {
  border-top: 1px solid #34495e;
}

table.dataTable.row-border tbody tr:first-child th,
table.dataTable.row-border tbody tr:first-child td,
table.dataTable.display tbody tr:first-child th,
table.dataTable.display tbody tr:first-child td {
  border-top: none;
}

table.dataTable.cell-border tbody th, table.dataTable.cell-border tbody td {
  border-top: 1px solid #34495e;
  border-right: 1px solid #34495e;
}

table.dataTable.cell-border tbody tr th:first-child,
table.dataTable.cell-border tbody tr td:first-child {
  border-left: 1px solid #34495e;
}

table.dataTable.cell-border tbody tr:first-child th,
table.dataTable.cell-border tbody tr:first-child td {
  border-top: none;
}

table.dataTable.stripe tbody tr.odd,
table.dataTable.display tbody tr.odd {
  background-color: #f9f9f9;
}

table.dataTable.stripe tbody tr.odd.selected,
table.dataTable.display tbody tr.odd.selected {
  background-color: #acbad4;
}

table.dataTable.hover tbody tr:hover,
table.dataTable.display tbody tr:hover {
  background-color: #f6f6f6;
}

table.dataTable.hover tbody tr:hover.selected,
table.dataTable.display tbody tr:hover.selected {
  background-color: #aab7d1;
}

table.dataTable.order-column tbody tr > .sorting_1,
table.dataTable.order-column tbody tr > .sorting_2,
table.dataTable.order-column tbody tr > .sorting_3, table.dataTable.display tbody tr > .sorting_1,
table.dataTable.display tbody tr > .sorting_2,
table.dataTable.display tbody tr > .sorting_3 {
  background-color: #fafafa;
}

table.dataTable.order-column tbody tr.selected > .sorting_1,
table.dataTable.order-column tbody tr.selected > .sorting_2,
table.dataTable.order-column tbody tr.selected > .sorting_3, table.dataTable.display tbody tr.selected > .sorting_1,
table.dataTable.display tbody tr.selected > .sorting_2,
table.dataTable.display tbody tr.selected > .sorting_3 {
  background-color: #acbad5;
}

table.dataTable.display tbody tr.odd > .sorting_1,
table.dataTable.order-column.stripe tbody tr.odd > .sorting_1 {
  background-color: #f1f1f1;
}

table.dataTable.display tbody tr.odd > .sorting_2,
table.dataTable.order-column.stripe tbody tr.odd > .sorting_2 {
  background-color: #f3f3f3;
}

table.dataTable.display tbody tr.odd > .sorting_3,
table.dataTable.order-column.stripe tbody tr.odd > .sorting_3 {
  background-color: whitesmoke;
}

table.dataTable.display tbody tr.odd.selected > .sorting_1,
table.dataTable.order-column.stripe tbody tr.odd.selected > .sorting_1 {
  background-color: #a6b4cd;
}

table.dataTable.display tbody tr.odd.selected > .sorting_2,
table.dataTable.order-column.stripe tbody tr.odd.selected > .sorting_2 {
  background-color: #a8b5cf;
}

table.dataTable.display tbody tr.odd.selected > .sorting_3,
table.dataTable.order-column.stripe tbody tr.odd.selected > .sorting_3 {
  background-color: #a9b7d1;
}

table.dataTable.display tbody tr.even > .sorting_1,
table.dataTable.order-column.stripe tbody tr.even > .sorting_1 {
  background-color: #fafafa;
}

table.dataTable.display tbody tr.even > .sorting_2,
table.dataTable.order-column.stripe tbody tr.even > .sorting_2 {
  background-color: #fcfcfc;
}

table.dataTable.display tbody tr.even > .sorting_3,
table.dataTable.order-column.stripe tbody tr.even > .sorting_3 {
  background-color: #fefefe;
}

table.dataTable.display tbody tr.even.selected > .sorting_1,
table.dataTable.order-column.stripe tbody tr.even.selected > .sorting_1 {
  background-color: #acbad5;
}

table.dataTable.display tbody tr.even.selected > .sorting_2,
table.dataTable.order-column.stripe tbody tr.even.selected > .sorting_2 {
  background-color: #aebcd6;
}

table.dataTable.display tbody tr.even.selected > .sorting_3,
table.dataTable.order-column.stripe tbody tr.even.selected > .sorting_3 {
  background-color: #afbdd8;
}

table.dataTable.display tbody tr:hover > .sorting_1,
table.dataTable.order-column.hover tbody tr:hover > .sorting_1 {
  background-color: #eaeaea;
}

table.dataTable.display tbody tr:hover > .sorting_2,
table.dataTable.order-column.hover tbody tr:hover > .sorting_2 {
  background-color: #ececec;
}

table.dataTable.display tbody tr:hover > .sorting_3,
table.dataTable.order-column.hover tbody tr:hover > .sorting_3 {
  background-color: #efefef;
}

table.dataTable.display tbody tr:hover.selected > .sorting_1,
table.dataTable.order-column.hover tbody tr:hover.selected > .sorting_1 {
  background-color: #a2aec7;
}

table.dataTable.display tbody tr:hover.selected > .sorting_2,
table.dataTable.order-column.hover tbody tr:hover.selected > .sorting_2 {
  background-color: #a3b0c9;
}

table.dataTable.display tbody tr:hover.selected > .sorting_3,
table.dataTable.order-column.hover tbody tr:hover.selected > .sorting_3 {
  background-color: #a5b2cb;
}

table.dataTable.no-footer {
  border-bottom: 1px solid #34495e;
}

table.dataTable.nowrap th, table.dataTable.nowrap td {
  white-space: nowrap;
}

table.dataTable.compact thead th,
table.dataTable.compact thead td {
  padding: 4px 17px 4px 4px;
}

table.dataTable.compact tfoot th,
table.dataTable.compact tfoot td {
  padding: 4px;
}

table.dataTable.compact tbody th,
table.dataTable.compact tbody td {
  padding: 4px;
}

table.dataTable th.dt-left,
table.dataTable td.dt-left {
  text-align: left;
}

table.dataTable th.dt-center,
table.dataTable td.dt-center,
table.dataTable td.dataTables_empty {
  text-align: center;
}

table.dataTable th.dt-right,
table.dataTable td.dt-right {
  text-align: right;
}

table.dataTable th.dt-justify,
table.dataTable td.dt-justify {
  text-align: justify;
}

table.dataTable th.dt-nowrap,
table.dataTable td.dt-nowrap {
  white-space: nowrap;
}

table.dataTable thead th.dt-head-left,
table.dataTable thead td.dt-head-left,
table.dataTable tfoot th.dt-head-left,
table.dataTable tfoot td.dt-head-left {
  text-align: left;
}

table.dataTable thead th.dt-head-center,
table.dataTable thead td.dt-head-center,
table.dataTable tfoot th.dt-head-center,
table.dataTable tfoot td.dt-head-center {
  text-align: center;
}

table.dataTable thead th.dt-head-right,
table.dataTable thead td.dt-head-right,
table.dataTable tfoot th.dt-head-right,
table.dataTable tfoot td.dt-head-right {
  text-align: right;
}

table.dataTable thead th.dt-head-justify,
table.dataTable thead td.dt-head-justify,
table.dataTable tfoot th.dt-head-justify,
table.dataTable tfoot td.dt-head-justify {
  text-align: justify;
}

table.dataTable thead th.dt-head-nowrap,
table.dataTable thead td.dt-head-nowrap,
table.dataTable tfoot th.dt-head-nowrap,
table.dataTable tfoot td.dt-head-nowrap {
  white-space: nowrap;
}

table.dataTable tbody th.dt-body-left,
table.dataTable tbody td.dt-body-left {
  text-align: left;
}

table.dataTable tbody th.dt-body-center,
table.dataTable tbody td.dt-body-center {
  text-align: center;
}

table.dataTable tbody th.dt-body-right,
table.dataTable tbody td.dt-body-right {
  text-align: right;
}

table.dataTable tbody th.dt-body-justify,
table.dataTable tbody td.dt-body-justify {
  text-align: justify;
}

table.dataTable tbody th.dt-body-nowrap,
table.dataTable tbody td.dt-body-nowrap {
  white-space: nowrap;
}

table.dataTable,
table.dataTable th,
table.dataTable td {
  box-sizing: content-box;
}

/*
 * Control feature layout
 */
.dataTables_wrapper {
  position: relative;
  clear: both;
  *zoom: 1;
  zoom: 1;
}

.dataTables_wrapper .dataTables_length {
  margin: 10px 0;
  float: left;
}

.dataTables_wrapper .dataTables_filter {
  float: right;
  text-align: right;
  margin: 10px 0;
}

.dataTables_wrapper .dataTables_filter input {
  margin-left: 0.5em;
}

.dataTables_wrapper .dataTables_info {
  clear: both;
  float: left;
  padding-top: 15px;
  color: rgba(52, 73, 94, 0.85) !important;
}

.dataTables_wrapper .dataTables_length, .dataTables_wrapper .dataTables_filter {
  color: #333;
}

.dataTables_wrapper .dataTables_paginate {
  float: right;
  text-align: right;
  margin-top: 10px;
}

.dataTables_wrapper .dataTables_paginate .paginate_button {
  box-sizing: border-box;
  display: inline-block;
  min-width: 1.5em;
  padding: 0.5em 1em;
  margin-left: 2px;
  text-align: center;
  text-decoration: none !important;
  cursor: pointer;
  *cursor: hand;
  background: #34495e;
  color: #fff !important;
  border: 1px solid transparent;
  border-radius: 2px;
}

.dataTables_wrapper .dataTables_paginate .paginate_button.current, .dataTables_wrapper .dataTables_paginate .paginate_button.current:hover {
  background: #e67e22 !important;
}

.dataTables_wrapper .dataTables_paginate .paginate_button.disabled, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:active {
  cursor: default;
  color: #666 !important;
  border: 1px solid transparent;
  background: transparent;
  box-shadow: none;
}

.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
  color: white !important;
  border: 1px solid #34495e;
}

.dataTables_wrapper .dataTables_paginate .paginate_button:active {
  outline: none;
  box-shadow: inset 0 0 3px #111;
}

.dataTables_wrapper .dataTables_paginate .next,
.dataTables_wrapper .dataTables_paginate .previous {
  background: #fff;
  color: rgba(52, 73, 94, 0.85) !important;
}

.dataTables_wrapper .dataTables_paginate .next:hover, .dataTables_wrapper .dataTables_paginate .next:active,
.dataTables_wrapper .dataTables_paginate .previous:hover,
.dataTables_wrapper .dataTables_paginate .previous:active {
  border: none !important;
  background: #fff;
  color: rgba(52, 73, 94, 0.85) !important;
  font-weight: 800;
}

.dataTables_wrapper .dataTables_paginate .ellipsis {
  padding: 0 1em;
}

.dataTables_wrapper .dataTables_processing {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 40px;
  margin-left: -50%;
  margin-top: -25px;
  padding-top: 20px;
  text-align: center;
  font-size: 1.2em;
  background-color: white;
}

.dataTables_wrapper .dataTables_info,
.dataTables_wrapper .dataTables_processing,
.dataTables_wrapper .dataTables_paginate {
  color: #fff;
}

.dataTables_wrapper .dataTables_scroll {
  clear: both;
}

.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody {
  *margin-top: -1px;
  -webkit-overflow-scrolling: touch;
}

.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody th, .dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody td {
  vertical-align: middle;
}

.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody th > div.dataTables_sizing,
.dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody td > div.dataTables_sizing {
  height: 0;
  overflow: hidden;
  margin: 0 !important;
  padding: 0 !important;
}

.dataTables_wrapper.no-footer .dataTables_scrollBody {
  border-bottom: 1px solid #34495e;
}

.dataTables_wrapper.no-footer div.dataTables_scrollHead table,
.dataTables_wrapper.no-footer div.dataTables_scrollBody table {
  border-bottom: none;
}

.dataTables_wrapper:after {
  visibility: hidden;
  display: block;
  content: "";
  clear: both;
  height: 0;
}

table.dataTable thead th {
  position: relative;
  background-image: none !important;
}

table.dataTable thead th.sorting:after,
table.dataTable thead th.sorting_asc:after,
table.dataTable thead th.sorting_desc:after {
  position: absolute;
  top: 12px;
  right: 8px;
  display: block;
  font-family: FontAwesome;
}

table.dataTable thead th.sorting:after {
  content: "\f0dc";
  color: #ddd;
  font-size: 0.8em;
  padding-top: 0.12em;
}

table.dataTable thead th.sorting_asc:after {
  content: "\f0de";
}

table.dataTable thead th.sorting_desc:after {
  content: "\f0dd";
}

@media screen and (max-width: 767px) {
  .dataTables_wrapper .dataTables_info,
  .dataTables_wrapper .dataTables_paginate {
    float: none;
    text-align: center;
  }
  .dataTables_wrapper .dataTables_paginate {
    margin-top: 0.5em;
  }
}

@media screen and (max-width: 640px) {
  .dataTables_wrapper .dataTables_length,
  .dataTables_wrapper .dataTables_filter {
    float: none;
    text-align: center;
  }
  .dataTables_wrapper .dataTables_filter {
    margin-top: 0.5em;
  }
}

/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */
@-webkit-keyframes passing-through {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30%, 70% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@keyframes passing-through {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30%, 70% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    -webkit-transform: translateY(-40px);
    transform: translateY(-40px);
  }
}

@-webkit-keyframes slide-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@keyframes slide-in {
  0% {
    opacity: 0;
    -webkit-transform: translateY(40px);
    transform: translateY(40px);
  }
  30% {
    opacity: 1;
    -webkit-transform: translateY(0px);
    transform: translateY(0px);
  }
}

@-webkit-keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  10% {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  20% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

@keyframes pulse {
  0% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
  10% {
    -webkit-transform: scale(1.1);
    transform: scale(1.1);
  }
  20% {
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}

.coderDropzone, .coderDropzone * {
  box-sizing: border-box;
}

.coderDropzone {
  min-height: 150px;
  border: 2px solid rgba(0, 0, 0, 0.3);
  background: white;
  padding: 20px 20px;
}

.coderDropzone.dz-clickable {
  cursor: pointer;
}

.coderDropzone.dz-clickable * {
  cursor: default;
}

.coderDropzone.dz-clickable .dz-message, .coderDropzone.dz-clickable .dz-message * {
  cursor: pointer;
}

.coderDropzone.dz-started .dz-message {
  display: none;
}

.coderDropzone.dz-drag-hover {
  border-style: solid;
}

.coderDropzone.dz-drag-hover .dz-message {
  opacity: 0.5;
}

.coderDropzone .dz-message {
  text-align: center;
  margin: 2em 0;
}

.coderDropzone .dz-preview {
  position: relative;
  display: inline-block;
  vertical-align: top;
  margin: 16px;
  min-height: 100px;
}

.coderDropzone .dz-preview:hover {
  z-index: 1000;
}

.coderDropzone .dz-preview:hover .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview.dz-file-preview .dz-image {
  background: #999;
  background: #ccc;
}

.coderDropzone .dz-preview.dz-file-preview .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview.dz-image-preview {
  background: white;
}

.coderDropzone .dz-preview.dz-image-preview .dz-details {
  -webkit-transition: opacity 0.2s linear;
  transition: opacity 0.2s linear;
}

.coderDropzone .dz-preview .dz-remove {
  font-size: 14px;
  text-align: center;
  display: block;
  cursor: pointer;
  border: none;
}

.coderDropzone .dz-preview .dz-remove:hover {
  text-decoration: underline;
}

.coderDropzone .dz-preview:hover .dz-details {
  opacity: 1;
}

.coderDropzone .dz-preview .dz-details {
  z-index: 20;
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  opacity: 0;
  font-size: 13px;
  min-width: 100%;
  max-width: 100%;
  text-align: center;
  color: rgba(0, 0, 0, 0.9);
  line-height: 150%;
}

.coderDropzone .dz-preview .dz-details .dz-size {
  margin-bottom: 5px;
  font-size: 16px;
}

.coderDropzone .dz-preview .dz-details .dz-filename {
  white-space: nowrap;
}

.coderDropzone .dz-preview .dz-details .dz-filename:not(:hover) {
  overflow: hidden;
  text-overflow: ellipsis;
}

.coderDropzone .dz-preview .dz-details .dz-filename:not(:hover) span {
  border: 1px solid transparent;
}

.coderDropzone .dz-preview .dz-details .dz-filename span, .coderDropzone .dz-preview .dz-details .dz-size span {
  padding: 0 0.4em;
  border-radius: 3px;
}

.coderDropzone .dz-preview:hover .dz-image img {
  -webkit-transform: scale(1.05, 1.05);
  transform: scale(1.05, 1.05);
  -webkit-filter: blur(8px);
  filter: blur(8px);
}

.coderDropzone .dz-preview .dz-image {
  border-radius: 5px;
  overflow: hidden;
  width: 120px;
  height: 120px;
  position: relative;
  display: block;
  z-index: 10;
}

.coderDropzone .dz-preview .dz-image img {
  display: block;
}

.coderDropzone .dz-preview.dz-success .dz-success-mark {
  -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
  animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.coderDropzone .dz-preview.dz-error .dz-error-mark {
  opacity: 1;
  -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
  animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);
}

.coderDropzone .dz-preview .dz-success-mark, .coderDropzone .dz-preview .dz-error-mark {
  pointer-events: none;
  opacity: 0;
  z-index: 500;
  position: absolute;
  display: block;
  top: 50%;
  left: 50%;
  margin-left: -27px;
  margin-top: -27px;
}

.coderDropzone .dz-preview .dz-success-mark svg, .coderDropzone .dz-preview .dz-error-mark svg {
  display: block;
  width: 54px;
  height: 54px;
}

.coderDropzone .dz-preview.dz-processing .dz-progress {
  opacity: 1;
  -webkit-transition: all 0.2s linear;
  transition: all 0.2s linear;
}

.coderDropzone .dz-preview.dz-complete .dz-progress {
  opacity: 0;
  -webkit-transition: opacity 0.4s ease-in;
  transition: opacity 0.4s ease-in;
}

.coderDropzone .dz-preview:not(.dz-processing) .dz-progress {
  -webkit-animation: pulse 6s ease infinite;
  animation: pulse 6s ease infinite;
}

.coderDropzone .dz-preview .dz-progress {
  opacity: 1;
  z-index: 1000;
  pointer-events: none;
  position: absolute;
  height: 16px;
  left: 50%;
  top: 50%;
  margin-top: -8px;
  width: 80px;
  margin-left: -40px;
  background: rgba(255, 255, 255, 0.9);
  -webkit-transform: scale(1);
  border-radius: 8px;
  overflow: hidden;
}

.coderDropzone .dz-preview .dz-progress .dz-upload {
  background: #333;
  background: -webkit-linear-gradient(top, #666, #444);
  background: linear-gradient(to bottom, #666, #444);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 0;
  -webkit-transition: width 300ms ease-in-out;
  transition: width 300ms ease-in-out;
}

.coderDropzone .dz-preview.dz-error .dz-error-message {
  display: block;
}

.coderDropzone .dz-preview .dz-error-message {
  pointer-events: none;
  z-index: 1000;
  position: absolute;
  display: block;
  display: none;
  opacity: 0;
  -webkit-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
  border-radius: 8px;
  font-size: 13px;
  top: 130px;
  left: -10px;
  width: 140px;
  background: #be2626;
  background: -webkit-linear-gradient(top, #be2626, #a92222);
  background: linear-gradient(to bottom, #be2626, #a92222);
  padding: 0.5em 1.2em;
  color: white;
}

.coderDropzone .dz-preview .dz-error-message:after {
  content: '';
  position: absolute;
  top: -6px;
  left: 64px;
  width: 0;
  height: 0;
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  border-bottom: 6px solid #be2626;
}

/*
 * The MIT License
 * Copyright (c) 2012 Matias Meno <m@tias.me>
 */
.coderDropzone, .coderDropzone * {
  box-sizing: border-box;
}

.coderDropzone {
  position: relative;
}

.coderDropzone .dz-preview {
  position: relative;
  display: inline-block;
  width: 120px;
  margin: 0.5em;
}

.coderDropzone .dz-preview .dz-progress {
  display: block;
  height: 15px;
  border: 1px solid #aaa;
}

.coderDropzone .dz-preview .dz-progress .dz-upload {
  display: block;
  height: 100%;
  width: 0;
  background: green;
}

.coderDropzone .dz-preview .dz-error-message {
  color: red;
  display: none;
}

.coderDropzone .dz-preview.dz-error .dz-error-message, .coderDropzone .dz-preview.dz-error .dz-error-mark {
  display: block;
}

.coderDropzone .dz-preview.dz-success .dz-success-mark {
  display: block;
}

.http-error-box {
  margin-top: 80px;
  background: white;
}

.http-error-box .container {
  padding: 120px;
}

.http-error-box h2 {
  font-size: 140px;
  font-weight: 600;
  color: #e67e22;
  display: block;
  text-align: center;
  margin-bottom: 0;
}

.http-error-box h3 {
  text-align: center;
  color: #34495e;
  font-size: 60px;
  font-weight: 600;
  margin-top: 20px;
}

.http-error-box .error-buttons {
  padding: 40px;
  margin-top: 80px;
  margin-bottom: 0px;
  text-align: center;
}

.http-error-box .error-buttons .error-button {
  padding: 20px 40px;
  background: #34495e;
  display: inline-block;
}

.http-error-box .error-buttons .error-button:first-child {
  margin-right: 40px;
  cursor: pointer;
}

#footer {
  margin-top: 50px;
  color: #fff;
  background: #34495e;
}

#footer .container {
  padding-top: 40px;
  padding-bottom: 30px;
}

#header {
  top: 0;
  left: 0;
  margin: 0 auto;
  background: #34495e;
  border-bottom: none;
  font-size: 15px;
  color: #fff;
  height: 60px;
}

#header .nav a {
  color: #fff;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
  padding-top: 20px;
  height: 60px;
}

#header .nav a:hover {
  background: #fff;
  color: #e67e22;
}

#header .navbar-header:hover #headLogo svg path {
  fill: #e67e22;
}

#header .navbar-header:hover .navbar-brand.logoTitle {
  color: #e67e22;
}

#header .navbar-brand.logoTitle {
  color: #fff;
  margin-right: 10px;
  font-size: 20px;
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
  padding-top: 20px;
  height: 60px;
}

#headLogo {
  float: left;
  padding: 12px 15px 5px 0;
  height: 60px;
}

#headLogo svg {
  display: block;
  width: 35px;
}

#headLogo svg path {
  -webkit-transition: .4s ease all;
  transition: .4s ease all;
}

html {
  height: 100%;
}

body {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 100%;
  padding-top: 50px;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  overflow-y: scroll;
}

#main {
  margin-top: 20px;
  -webkit-box-flex: 1;
  -webkit-flex: 1;
      -ms-flex: 1;
          flex: 1;
}

/* Override the default bootstrap behavior where horizontal description lists 
   will truncate terms that are too long to fit in the left column 
*/
.dl-horizontal dt {
  white-space: normal;
}

hr {
  height: 12px;
  border: 0;
  border-bottom: 1px solid #333;
}

.backArrow {
  margin-top: 10px;
}

.text-danger {
  color: #e67e22 !important;
}

.input-validation-error {
  background: pink;
  border: 1px solid #e67e22;
}

body.login {
  background: #34495e;
}

.loginCenter {
  margin: 0 auto;
  padding: 10px;
  max-width: 400px;
}

.loginCenter h1 {
  margin-top: 0;
  margin-bottom: 25px;
  text-align: center;
}

.loginCenter .logo svg {
  display: block;
  width: 200px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 20px;
}

.loginCenter #loginForm {
  color: #fff;
}

.loginCenter .btn {
  width: 100%;
}

#loginForm {
  padding: 1px 10px 1px 10px;
  border-style: solid;
  border-width: medium;
  border-color: #34495e;
}

.allOfIt {
  margin-top: 15px;
}

.projectBox {
  position: relative;
  min-height: 220px;
  min-width: 225px;
  border: solid;
  font-size: 13px;
  text-align: center;
  border: 5px solid white;
  color: #333;
  margin-bottom: 10px;
  background-color: rgba(255, 255, 255, 0.95);
}

.projectBox:hover {
  box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.05);
}

.projectBox .name {
  font-size: 16px;
  margin-bottom: 1px;
}

.projectBox .course {
  font-style: oblique;
}

.projectBox .value {
  display: inline-block;
  width: 100%;
  margin: 10px 0 5px 0;
}

.projectBox .date {
  position: absolute;
  bottom: 0;
  display: block;
  margin-left: 0;
  font-size: 10px;
}

.projectBox .date .start {
  width: 50%;
  text-align: left;
}

.projectBox .date .end {
  width: 50%;
  text-align: right;
}

.right {
  float: right;
}

.left {
  float: left;
}

.projectBox.fluid {
  max-height: none;
  margin-bottom: 10px;
}

#proText {
  color: #34495e;
}

.proContainer {
  width: 80%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 10px;
  text-align: center;
}

caption {
  font-size: 20px;
}

.remaining {
  margin-top: 10px;
  margin-bottom: 25px;
}

.sideTable {
  border: solid;
  border: 3px solid white;
  padding-top: -100px;
}

.sideTable ~ .sideTable {
  margin-top: 22.5px;
}

.oldBox {
  opacity: .5;
}

.oldBox:hover {
  opacity: 0.9 !important;
}

.oldBox:hover #endDate {
  opacity: 0.8 !important;
}

.oldBox #endDate {
  opacity: .35;
  color: #e85445;
}

#endDate {
  padding-top: 15px;
  font-size: 15px;
}

.users-button {
  background: #e67e22;
  border: none;
}

.users-button:hover {
  background: #cc6b14;
}

.modal-content {
  border-radius: 0;
}

.modal-content .modal-header {
  border-bottom: none;
  padding: 40px;
  padding-bottom: 10px;
}

.modal-content .modal-header button {
  margin-top: -5px;
}

.modal-content .modal-header button span {
  font-size: 30px;
  color: #34495e;
}

.modal-content .modal-body {
  padding: 40px;
  padding-top: 0;
}

.submissions-table th:first-child {
  text-align: center;
}

.test-panel-status {
  float: right;
}

﻿ .users-button {
  background: #e67e22;
  border: none;
}

﻿ .users-button:hover {
  background: #cc6b14;
}

.modal-content {
  border-radius: 0;
}

.modal-content .modal-header {
  border-bottom: none;
  padding: 40px;
  padding-bottom: 10px;
}

.modal-content .modal-header button {
  margin-top: -5px;
}

.modal-content .modal-header button span {
  font-size: 30px;
  color: #34495e;
}

.modal-content .modal-body {
  padding: 40px;
  padding-top: 0;
}

#files .panel-body {
  padding: 0;
}

#tests .editor.input {
  margin-bottom: 50px;
}

#tests h4 {
  margin-left: -15px;
  margin-right: -15px;
  padding: 10px 15px;
  border-top: 1px solid #ddd;
  border-bottom: 1px solid #ddd;
  font-size: 14px;
  background: #fcfcfc;
}

#tests .editor {
  border: 1px solid #ccc;
}

.panel-title {
  display: inline-block;
}

.coder-table {
  width: 100%;
  margin: 0 auto;
  clear: both;
  border: 1px solid #34495e;
  border-collapse: separate;
  border-spacing: 0;
}

.coder-table i.fa {
  margin-left: 20px;
  font-size: 20px;
}

.coder-table thead > tr {
  border-bottom: 1px solid #34495e;
  background-color: #34495e;
}

.coder-table thead > tr th {
  padding: 10px 15px;
  font-weight: 400;
  color: #f9f9f9;
}

.coder-table thead > tr th:last-child {
  text-align: right;
}

.coder-table tr td {
  padding: 8px 0;
  padding-left: 15px;
  border-bottom: 1px solid #f0f0f0;
}

.coder-table tr td:not(:last-child) a {
  color: #333;
}

.coder-table tr td:not(:last-child) a:hover {
  color: #e67e22;
}

.coder-table tr td:last-child:not(:only-child) {
  text-align: right;
  padding-right: 20px;
}

.coder-table tr.not-ongoing .end-date, .coder-table tr.not-started .end-date, .coder-table tr.project-ended .end-date {
  color: #e85445;
}

.coder-table tr.not-ongoing td,
.coder-table tr.not-ongoing td a, .coder-table tr.not-started td,
.coder-table tr.not-started td a, .coder-table tr.project-ended td,
.coder-table tr.project-ended td a {
  color: rgba(51, 51, 51, 0.4);
}

.coder-table tr.not-ongoing td i,
.coder-table tr.not-ongoing td a i, .coder-table tr.not-started td i,
.coder-table tr.not-started td a i, .coder-table tr.project-ended td i,
.coder-table tr.project-ended td a i {
  color: #e67e22;
}

#projectName {
  width: 100%;
  float: left;
  display: block;
}

#taskName {
  display: block;
  font-size: large;
}

#bestSub {
  width: 100%;
  float: right;
  text-align: right;
}

#bestInTask p {
  text-align: right;
  height: 124px;
}

.small {
  text-align: left;
  display: inline-block;
}

.small .left {
  float: left;
}

.small .right {
  float: right;
}

#tests .test {
  margin-bottom: 20px;
  border: 1px solid #333;
  padding: 30px;
}

#tests .tests-wrap {
  margin-top: 30px;
}

#taskFiles {
  margin-top: 20px;
  min-height: 231px;
}

#task-tests h3 {
  margin-left: -20px;
  margin-right: -20px;
  padding-left: 20px;
  padding-right: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid #34495e;
}

#task-tests .test {
  margin-bottom: 60px;
}

#task-tests .editor {
  border: 1px solid #ccc;
}

#task-handin .user-select {
  margin-bottom: 10px;
}

.upload-area {
  position: relative;
  min-height: 325px;
}

.upload-area a {
  margin-top: 10px;
}

.upload-area i {
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}

.upload-area:hover i {
  margin-bottom: 20px !important;
}

.upload-area .dz-message {
  height: 80px;
  position: relative;
  margin: 60px 0;
  top: 0;
  right: 0;
  left: 0;
}

.upload-area .dz-message span {
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.upload-area .dz-message span i {
  display: block;
  font-size: 60px;
  margin-bottom: 10px;
}

.upload-area .dz-preview {
  margin-bottom: 40px;
}

.upload-area .dz-preview .dz-success-mark svg g {
  fill: green;
}

.upload-area .dz-preview .dz-error-mark svg g {
  fill: red;
}

#userDetailsRightSide {
  padding-left: 0;
}

dd {
  font-size: 16px;
  -moz-text-align-last: left;
       text-align-last: left;
}

/*# sourceMappingURL=data:application/json;base64, */
